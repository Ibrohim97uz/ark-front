{"version":3,"sources":["routes/routesManagers/settings/profile/info/components/UserInfo.js","routes/routesManagers/settings/profile/info/index.js"],"names":["FormItem","Form","Item","formItemLayout","labelCol","span","wrapperCol","ColProps","offset","ColPropsAsFile","create","currentItem","onSubmit","formItems","onChangeFile","file","form","getFieldDecorator","validateFields","getFieldsValue","dynamicFormItems","map","formItem","key","name","className","label","hasFeedback","initialValue","obj","layout","e","preventDefault","errors","formData","id","fileStatus","photo","colLayout","title","IntlMessages","types","size","type","htmlType","postCurrentUserInfoEdit","api","userMe","Info","props","getCurrentUser","ApiRequest","then","result","success","onAuthUser","object","onRequestFunc","path","data","message","notification","messageSuccess","description","descriptionSuccess","error","messageError","descriptionError","intlMessages","en","ru","uz","setState","state","authUser","fileUrl","apiFileUrl","rules","required","mask","Password","this","Component","connect","auth"],"mappings":"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","file":"static/js/26.10d6dcdb.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Form} from 'antd/lib/index'\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {FileUpload} from \"../../../../../../components/CustomComponents\";\r\nimport {Button, Card, Col} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst ColProps = {\r\n  span: 12,\r\n  offset: 6\r\n};\r\n\r\nconst ColPropsAsFile = {\r\n  span: 6,\r\n  offset: 9\r\n};\r\n\r\nconst UserInfo = ({\r\n                    currentItem,\r\n                    onSubmit,\r\n                    formItems,\r\n                    onChangeFile,\r\n                    file,\r\n                    form: {\r\n                      getFieldDecorator,\r\n                      validateFields,\r\n                      getFieldsValue,\r\n                    },\r\n                  }) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    validateFields((errors) => {\r\n      if (errors) {\r\n        return\r\n      }\r\n      let formData = getFieldsValue();\r\n      formData['id'] = currentItem.id;\r\n      formData['file'] = file === null ? {} : file.file;\r\n      formData['type'] = true;\r\n      formData['fileUpload'] = true;\r\n      formData['password'] = formData['nowPassword'];\r\n      if (file && file.fileStatus === \"delete\") {\r\n        formData['file'] = {};\r\n      }\r\n      if (file && file.fileStatus === \"create\") {\r\n        formData['photoId'] = currentItem.photo && currentItem.photo.id;\r\n      }\r\n      if (file && !file.fileStatus) {\r\n        formData['file'] = {};\r\n        formData['photoId'] = currentItem.photo && currentItem.photo.id;\r\n      }\r\n      onSubmit(formData)\r\n    })\r\n  };\r\n\r\n  const dynamicFormItems = formItems.map((formItem) =>\r\n    <Col {...ColProps} key={formItem.name}>\r\n      <FormItem className=\"mb-0\" label={formItem.label} hasFeedback {...formItemLayout}>\r\n        {getFieldDecorator(formItem.name, {\r\n          initialValue: currentItem[formItem.name],\r\n          ...formItem\r\n        })(formItem.obj)}\r\n      </FormItem>\r\n    </Col>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"h-100 page-info\">\r\n      <Form layout=\"horizontal\" onSubmit={handleSubmit}>\r\n        <Col {...ColProps}>\r\n          <FileUpload\r\n            name={\"file\"}\r\n            colLayout={ColPropsAsFile}\r\n            title={<IntlMessages id={'attachment'}/>}\r\n            types={[\"image/jpeg\",\r\n              \"image/png\",\r\n              \"image/jpg\"]}\r\n            size={50}\r\n            file={file}\r\n            onChangeFile={onChangeFile}\r\n            formItemLayout={formItemLayout}\r\n          />\r\n        </Col>\r\n        {dynamicFormItems}\r\n        <Col {...ColProps} className={'mt-3'}>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"btn-block\">\r\n            <IntlMessages id={'updateInfo'}/>\r\n          </Button>\r\n        </Col>\r\n      </Form>\r\n    </Card>\r\n  )\r\n};\r\n\r\nUserInfo.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  type: PropTypes.string,\r\n  item: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form.create()(UserInfo)\r\n","import React, {Component} from 'react';\r\nimport UserInfo from './components/UserInfo'\r\nimport IntlMessages, {intlMessages} from \"../../../../../util/IntlMessages\";\r\nimport {Input, notification} from \"antd\";\r\nimport {MaskedInput} from \"antd-mask-input\";\r\nimport ApiRequest from \"../../../../../services\";\r\nimport api from '../../../../../services/app'\r\nimport {connect} from \"react-redux\";\r\nimport {onAuthUser} from \"../../../../../redux/auth/action\";\r\nimport {apiFileUrl} from '../../../../../util/constants'\r\nconst {postCurrentUserInfoEdit, userMe} = api;\r\n\r\nclass Info extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentItem: this.props.authUser,\r\n            file: this.props.authUser.photo ? {\r\n                fileUrl: apiFileUrl + this.props.authUser.photo.id,\r\n                file: this.props.authUser.photo,\r\n                fileStatus:\"create\"\r\n            } : null,\r\n            formItems: [\r\n                {\r\n                    label: <IntlMessages id=\"firstName\"/>,\r\n                    name: 'firstName',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessages id=\"E_ERROR\"/>\r\n                        },\r\n                    ],\r\n                    obj: <Input/>\r\n                },\r\n                {\r\n                    label: <IntlMessages id=\"lastName\"/>,\r\n                    name: 'lastName',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessages id=\"E_ERROR\"/>\r\n                        },\r\n                    ],\r\n                    obj: <Input/>\r\n                },\r\n\r\n                {\r\n                    label: <IntlMessages id=\"phoneNumber\"/>,\r\n                    name: 'phoneNumber',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessages id=\"E_ERROR\"/>\r\n                        },\r\n                    ],\r\n                    obj:\r\n                        (<MaskedInput mask=\"+998111111111\" name={'phoneNumber'}/>)\r\n                },\r\n                {\r\n                    label: <IntlMessages id=\"password\"/>,\r\n                    name: 'nowPassword',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessages id=\"E_ERROR\"/>\r\n                        },\r\n                    ],\r\n                    obj: <Input.Password/>\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    getCurrentUser = () => {\r\n        ApiRequest(userMe).then((result) => {\r\n            if (result.success) {\r\n                this.props.onAuthUser(result.object);\r\n            }\r\n        });\r\n    };\r\n\r\n    onRequestFunc = (path, data, message) => {\r\n        ApiRequest(path, data).then((result => {\r\n            if (result.success) {\r\n                this.getCurrentUser();\r\n\r\n                notification.success({\r\n                    key: message.key,\r\n                    message: message.messageSuccess,\r\n                    description: message.descriptionSuccess,\r\n                });\r\n            } else {\r\n                notification.error({\r\n                    key: message.key,\r\n                    message: message.messageError,\r\n                    description: message.descriptionError,\r\n                });\r\n            }\r\n        }))\r\n    };\r\n\r\n    onSubmit = (data) => {\r\n        let message = {\r\n            key: \"update\",\r\n            messageError: intlMessages({\r\n                en: \"There was an error updating\",\r\n                ru: \"Произошла ошибка при изменение\",\r\n                uz: \"Tahrirlashda xatolik yuz berdi\"\r\n            }),\r\n            messageSuccess: intlMessages({\r\n                en: \"Successfully updated\",\r\n                ru: \"Успешно изменено\",\r\n                uz: \"Muvaffaqqiyatli tahrirlandi\"\r\n            }),\r\n        };\r\n        this.onRequestFunc(postCurrentUserInfoEdit, data, message)\r\n    };\r\n\r\n    onChangeFile = (file) => {\r\n        this.setState({\r\n            file: file\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <UserInfo file={this.state.file}\r\n                      currentItem={this.state.currentItem}\r\n                      formItems={this.state.formItems}\r\n                      onSubmit={this.onSubmit}\r\n                      onChangeFile={this.onChangeFile}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n    let {authUser}=auth;\r\n    return {authUser};\r\n};\r\n\r\nexport default connect(mapStateToProps, {onAuthUser})(Info);\r\n"],"sourceRoot":""}