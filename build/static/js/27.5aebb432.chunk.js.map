{"version":3,"sources":["routes/routesManagers/settings/profile/password/components/UserPassword.js","routes/routesManagers/settings/profile/password/index.js"],"names":["FormItem","Form","Item","formItemLayout","labelCol","span","wrapperCol","ColProps","offset","create","onSubmit","formItems","form","getFieldDecorator","validateFields","getFieldsValue","dynamicFormItems","map","formItem","key","name","className","label","hasFeedback","obj","layout","e","preventDefault","errors","formData","type","htmlType","IntlMessages","id","editPassword","api","userMe","Password","props","getCurrentUser","ApiRequest","then","result","success","onAuthUser","object","onRequestFunc","path","data","message","notification","messageSuccess","description","descriptionSuccess","error","messageError","descriptionError","intlMessages","en","ru","uz","state","rules","required","this","Component","connect"],"mappings":"2QAMMA,EAAWC,OAAKC,KAChBC,EAAiB,CACnBC,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,KAGRE,EAAW,CACbF,KAAM,GACNG,OAAO,GAsDIP,SAAKQ,QAALR,EAnDM,SAAC,GAQA,IAPHS,EAOE,EAPFA,SACAC,EAME,EANFA,UAME,IALFC,KACIC,EAIF,EAJEA,kBACAC,EAGF,EAHEA,eACAC,EAEF,EAFEA,eAcbC,EAAmBL,EAAUM,KAAI,SAACC,GAAD,OACvC,kBAAC,IAAQX,EACL,kBAACP,EAAD,eAAUmB,IAAKD,EAASE,KAAMC,UAAU,OAAOC,MAAOJ,EAASI,MAAOC,aAAW,GAAKpB,GACjFU,EAAkBK,EAASE,KAAV,eACXF,GADNL,CAEEK,EAASM,UAKpB,OACE,kBAAC,IAAD,CAAMH,UAAU,SACZ,kBAAC,OAAD,CAAMI,OAAO,aAAaf,SAvBX,SAACgB,GAClBA,EAAEC,iBACFb,GAAe,SAACc,GACZ,IAAIA,EAAJ,CAGA,IAAIC,EAAWd,IACfL,EAASmB,QAgBuCR,UAAU,QACvDL,EACD,kBAAC,IAAD,iBAAST,EAAT,CAAmBc,UAAW,SAC1B,kBAAC,IAAD,CAAQS,KAAK,UAAUC,SAAS,SAASV,UAAU,aAC/C,kBAACW,EAAA,EAAD,CAAcC,GAAI,0B,iBC/CjCC,EAAwBC,IAAxBD,aAAcE,EAAUD,IAAVC,OAEfC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA8BVC,eAAiB,WACbC,YAAWJ,GAAQK,MAAK,SAACC,GACjBA,EAAOC,SACP,EAAKL,MAAMM,WAAWF,EAAOG,YAlCtB,EAuCnBC,cAAgB,SAACC,EAAMC,EAAMC,GACzBT,YAAWO,EAAMC,GAAMP,MAAM,SAAAC,GACrBA,EAAOC,SACP,EAAKJ,iBACLW,IAAaP,QAAQ,CACjBxB,IAAK8B,EAAQ9B,IACb8B,QAASA,EAAQE,eACjBC,YAAaH,EAAQI,sBAGzBH,IAAaI,MAAM,CACfnC,IAAK8B,EAAQ9B,IACb8B,QAASA,EAAQM,aACjBH,YAAaH,EAAQO,uBApDlB,EA0DnB9C,SAAW,SAACsC,GACR,IAAIC,EAAU,CACV9B,IAAK,SACLoC,aAAcE,YAAa,CACvBC,GAAI,8BACJC,GAAI,wKACJC,GAAI,mCAERT,eAAgBM,YAAa,CACzBC,GAAI,uBACJC,GAAI,8FACJC,GAAI,iCAGZ,EAAKd,cAAcZ,EAAcc,EAAMC,IAtEvC,EAAKY,MAAQ,CACTlD,UAAW,CAEP,CACIW,MAAO,kBAACU,EAAA,EAAD,CAAcC,GAAG,gBACxBb,KAAM,cACN0C,MAAO,CACH,CACIC,UAAU,EACVd,QAAS,kBAACjB,EAAA,EAAD,CAAcC,GAAG,cAGlCT,IAAK,kBAAC,IAAMa,SAAP,OAEX,CACEf,MAAO,kBAACU,EAAA,EAAD,CAAcC,GAAG,gBACxBb,KAAM,cACN0C,MAAO,CACL,CACEC,UAAU,EACVd,QAAS,kBAACjB,EAAA,EAAD,CAAcC,GAAG,cAG9BT,IAAK,kBAAC,IAAMa,SAAP,SAzBE,E,0CA4EnB,WACI,OACI,kBAAC,EAAD,CAAc1B,UAAWqD,KAAKH,MAAMlD,UAAWD,SAAUsD,KAAKtD,e,GA/EnDuD,aAmFRC,sBAAQ,KAAM,CAACtB,gBAAfsB,CAA4B7B","file":"static/js/27.5aebb432.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Form} from 'antd/lib/index'\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {Button, Card, Col} from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        span: 24,\r\n    },\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\nconst ColProps = {\r\n    span: 12,\r\n    offset:6\r\n};\r\n\r\nconst UserPassword = ({\r\n                   onSubmit,\r\n                   formItems,\r\n                   form: {\r\n                       getFieldDecorator,\r\n                       validateFields,\r\n                       getFieldsValue,\r\n                   },\r\n               }) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        validateFields((errors) => {\r\n            if (errors) {\r\n                return\r\n            }\r\n            let formData = getFieldsValue();\r\n            onSubmit(formData)\r\n        })\r\n    };\r\n\r\n    const dynamicFormItems = formItems.map((formItem) =>\r\n    <Col {...ColProps}>\r\n        <FormItem key={formItem.name} className=\"mb-0\" label={formItem.label} hasFeedback {...formItemLayout}>\r\n            {getFieldDecorator(formItem.name, {\r\n                ...formItem\r\n            })(formItem.obj)}\r\n        </FormItem>\r\n    </Col>\r\n    );\r\n\r\n    return (\r\n      <Card className=\"h-100\">\r\n          <Form layout=\"horizontal\" onSubmit={handleSubmit} className=\"mt-5\">\r\n              {dynamicFormItems}\r\n              <Col {...ColProps} className={'mt-3'}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"btn-block\">\r\n                      <IntlMessages id={'updatePassword'}/>\r\n                  </Button>\r\n              </Col>\r\n          </Form>\r\n      </Card>\r\n    )\r\n};\r\n\r\nUserPassword.propTypes = {\r\n    form: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    item: PropTypes.object,\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form.create()(UserPassword)\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Input, notification} from \"antd\";\r\nimport IntlMessages, {intlMessages} from \"../../../../../util/IntlMessages\";\r\nimport ApiRequest from \"../../../../../services\";\r\nimport UserPassword from './components/UserPassword'\r\nimport api from '../../../../../services/app'\r\nimport {onAuthUser} from \"../../../../../redux/auth/action\";\r\n\r\nconst {editPassword, userMe} = api;\r\n\r\nclass Password extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formItems: [\r\n\r\n                {\r\n                    label: <IntlMessages id=\"oldPassword\"/>,\r\n                    name: 'oldPassword',\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: <IntlMessages id=\"E_ERROR\"/>\r\n                        },\r\n                    ],\r\n                    obj: <Input.Password/>\r\n                },\r\n              {\r\n                label: <IntlMessages id=\"newPassword\"/>,\r\n                name: 'newPassword',\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <IntlMessages id=\"E_ERROR\"/>\r\n                  },\r\n                ],\r\n                obj: <Input.Password/>\r\n              }\r\n            ]\r\n        }\r\n    }\r\n\r\n    getCurrentUser = () => {\r\n        ApiRequest(userMe).then((result) => {\r\n            if (result.success) {\r\n                this.props.onAuthUser(result.object);\r\n            }\r\n        });\r\n    };\r\n\r\n    onRequestFunc = (path, data, message) => {\r\n        ApiRequest(path, data).then((result => {\r\n            if (result.success) {\r\n                this.getCurrentUser();\r\n                notification.success({\r\n                    key: message.key,\r\n                    message: message.messageSuccess,\r\n                    description: message.descriptionSuccess,\r\n                });\r\n            } else {\r\n                notification.error({\r\n                    key: message.key,\r\n                    message: message.messageError,\r\n                    description: message.descriptionError,\r\n                });\r\n            }\r\n        }))\r\n    };\r\n\r\n    onSubmit = (data) => {\r\n        let message = {\r\n            key: \"update\",\r\n            messageError: intlMessages({\r\n                en: \"There was an error updating\",\r\n                ru: \"Произошла ошибка при изменение\",\r\n                uz: \"Tahrirlashda xatolik yuz berdi\"\r\n            }),\r\n            messageSuccess: intlMessages({\r\n                en: \"Successfully updated\",\r\n                ru: \"Успешно изменено\",\r\n                uz: \"Muvaffaqqiyatli tahrirlandi\"\r\n            }),\r\n        };\r\n        this.onRequestFunc(editPassword, data, message)\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <UserPassword formItems={this.state.formItems} onSubmit={this.onSubmit}/>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, {onAuthUser})(Password);\r\n"],"sourceRoot":""}