{"ast":null,"code":"import { SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH, UPDATE_MENUS } from \"constants/ActionTypes\";\nimport { LAYOUT_TYPE, NAV_STYLE, THEME_COLOR_SELECTION, THEME_TYPE } from \"../../constants/ThemeSetting\";\nimport { UPDATE_STATE } from \"../auth/actionType\";\nexport function toggleCollapsedSideNav(navCollapsed) {\n  return {\n    type: TOGGLE_COLLAPSED_NAV,\n    navCollapsed: navCollapsed\n  };\n}\nexport function updateWindowWidth(width) {\n  return {\n    type: WINDOW_WIDTH,\n    width: width\n  };\n}\nexport function setThemeType(themeType) {\n  return {\n    type: THEME_TYPE,\n    themeType: themeType\n  };\n}\nexport function setThemeColorSelection(colorSelection) {\n  return {\n    type: THEME_COLOR_SELECTION,\n    colorSelection: colorSelection\n  };\n}\nexport function onNavStyleChange(navStyle) {\n  return {\n    type: NAV_STYLE,\n    navStyle: navStyle\n  };\n}\nexport function onLayoutTypeChange(layoutType) {\n  return {\n    type: LAYOUT_TYPE,\n    layoutType: layoutType\n  };\n}\nexport function switchLanguage(locale) {\n  return {\n    type: SWITCH_LANGUAGE,\n    payload: locale\n  };\n}\nexport function onUpdateMenus(menus) {\n  return {\n    type: UPDATE_MENUS,\n    payload: menus\n  };\n}\nexport var updateState = function updateState(data) {\n  return {\n    type: UPDATE_STATE,\n    payload: data\n  };\n};","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/redux/setting/action.js"],"names":["SWITCH_LANGUAGE","TOGGLE_COLLAPSED_NAV","WINDOW_WIDTH","UPDATE_MENUS","LAYOUT_TYPE","NAV_STYLE","THEME_COLOR_SELECTION","THEME_TYPE","UPDATE_STATE","toggleCollapsedSideNav","navCollapsed","type","updateWindowWidth","width","setThemeType","themeType","setThemeColorSelection","colorSelection","onNavStyleChange","navStyle","onLayoutTypeChange","layoutType","switchLanguage","locale","payload","onUpdateMenus","menus","updateState","data"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,oBAAzB,EAA+CC,YAA/C,EAA4DC,YAA5D,QAA+E,uBAA/E;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,qBAAhC,EAAuDC,UAAvD,QAAwE,8BAAxE;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AAGA,OAAO,SAASC,sBAAT,CAAgCC,YAAhC,EAA8C;AACnD,SAAO;AAACC,IAAAA,IAAI,EAAEV,oBAAP;AAA6BS,IAAAA,YAAY,EAAZA;AAA7B,GAAP;AACD;AAED,OAAO,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,SAAO;AAACF,IAAAA,IAAI,EAAET,YAAP;AAAqBW,IAAAA,KAAK,EAALA;AAArB,GAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,SAAO;AAACJ,IAAAA,IAAI,EAAEJ,UAAP;AAAmBQ,IAAAA,SAAS,EAATA;AAAnB,GAAP;AACD;AAED,OAAO,SAASC,sBAAT,CAAgCC,cAAhC,EAAgD;AACrD,SAAO;AAACN,IAAAA,IAAI,EAAEL,qBAAP;AAA8BW,IAAAA,cAAc,EAAdA;AAA9B,GAAP;AACD;AAED,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,SAAO;AAACR,IAAAA,IAAI,EAAEN,SAAP;AAAkBc,IAAAA,QAAQ,EAARA;AAAlB,GAAP;AACD;AAED,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AAC7C,SAAO;AAACV,IAAAA,IAAI,EAAEP,WAAP;AAAoBiB,IAAAA,UAAU,EAAVA;AAApB,GAAP;AACD;AAED,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SAAO;AACLZ,IAAAA,IAAI,EAAEX,eADD;AAELwB,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;AACD,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,SAAO;AACLf,IAAAA,IAAI,EAAER,YADD;AAELqB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO;AACLjB,IAAAA,IAAI,EAAEH,YADD;AAELgB,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM","sourcesContent":["import {SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH,UPDATE_MENUS} from \"constants/ActionTypes\";\r\nimport {LAYOUT_TYPE, NAV_STYLE, THEME_COLOR_SELECTION, THEME_TYPE} from \"../../constants/ThemeSetting\";\r\nimport {UPDATE_STATE} from \"../auth/actionType\";\r\n\r\n\r\nexport function toggleCollapsedSideNav(navCollapsed) {\r\n  return {type: TOGGLE_COLLAPSED_NAV, navCollapsed};\r\n}\r\n\r\nexport function updateWindowWidth(width) {\r\n  return {type: WINDOW_WIDTH, width};\r\n}\r\n\r\nexport function setThemeType(themeType) {\r\n  return {type: THEME_TYPE, themeType};\r\n}\r\n\r\nexport function setThemeColorSelection(colorSelection) {\r\n  return {type: THEME_COLOR_SELECTION, colorSelection};\r\n}\r\n\r\nexport function onNavStyleChange(navStyle) {\r\n  return {type: NAV_STYLE, navStyle};\r\n}\r\n\r\nexport function onLayoutTypeChange(layoutType) {\r\n  return {type: LAYOUT_TYPE, layoutType};\r\n}\r\n\r\nexport function switchLanguage(locale) {\r\n  return {\r\n    type: SWITCH_LANGUAGE,\r\n    payload: locale\r\n  };\r\n}\r\nexport function onUpdateMenus(menus) {\r\n  return {\r\n    type: UPDATE_MENUS,\r\n    payload: menus\r\n  };\r\n}\r\nexport const updateState = (data) => {\r\n  return {\r\n    type: UPDATE_STATE,\r\n    payload: data\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}