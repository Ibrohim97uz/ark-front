{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from'react';import{Dropdown,Button,Icon,Menu}from'antd';import IntlMessages from\"../../util/IntlMessages\";var DropOption=function DropOption(_ref){var onMenuClick=_ref.onMenuClick,_ref$menuOptions=_ref.menuOptions,menuOptions=_ref$menuOptions===void 0?[]:_ref$menuOptions,menuStatus=_ref.menuStatus,buttonStyle=_ref.buttonStyle,onAdminMenuClick=_ref.onAdminMenuClick,_ref$adminMenuOptions=_ref.adminMenuOptions,adminMenuOptions=_ref$adminMenuOptions===void 0?[]:_ref$adminMenuOptions,adminStatus=_ref.adminStatus;var menu=menuOptions.map(function(item){return/*#__PURE__*/React.createElement(Menu.Item,{key:item.key,value:item.name},item.name);});var adminMenu=adminMenuOptions.map(function(item){return/*#__PURE__*/React.createElement(Menu.Item,{key:item.key,value:item.name},item.name);});return menuStatus===true?/*#__PURE__*/React.createElement(Dropdown,{overlay:/*#__PURE__*/React.createElement(Menu,{onClick:onAdminMenuClick},adminMenu)},/*#__PURE__*/React.createElement(Button,{className:\"btn-block mb-0 pb-3\"},/*#__PURE__*/React.createElement(Icon,{type:\"user\",style:{transform:\"translate(-4px,-2px)\"}}),/*#__PURE__*/React.createElement(IntlMessages,{id:'admin'}))):/*#__PURE__*/React.createElement(Dropdown,{overlay:/*#__PURE__*/React.createElement(Menu,{onClick:onMenuClick},menu)},/*#__PURE__*/React.createElement(Button,{className:\"mb-0 pb-3\",style:_objectSpread({border:'none'},buttonStyle)},/*#__PURE__*/React.createElement(Icon,{style:{marginRight:2},type:\"bars\"}),/*#__PURE__*/React.createElement(Icon,{type:\"down\"})));};export default DropOption;","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/components/DropOption/DropOption.js"],"names":["React","Dropdown","Button","Icon","Menu","IntlMessages","DropOption","onMenuClick","menuOptions","menuStatus","buttonStyle","onAdminMenuClick","adminMenuOptions","adminStatus","menu","map","item","key","name","adminMenu","transform","border","marginRight"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,CAAmBC,MAAnB,CAA2BC,IAA3B,CAAiCC,IAAjC,KAA6C,MAA7C,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAEO,IADJC,CAAAA,WACI,MADJA,WACI,uBADSC,WACT,CADSA,WACT,2BADuB,EACvB,kBAD0BC,UAC1B,MAD0BA,UAC1B,CADsCC,WACtC,MADsCA,WACtC,CADmDC,gBACnD,MADmDA,gBACnD,4BADoEC,gBACpE,CADoEA,gBACpE,gCADsF,EACtF,uBADyFC,WACzF,MADyFA,WACzF,CACxB,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAACO,GAAZ,CAAgB,SAAAC,IAAI,qBAAI,oBAAC,IAAD,CAAM,IAAN,EAAW,GAAG,CAAEA,IAAI,CAACC,GAArB,CAA0B,KAAK,CAAED,IAAI,CAACE,IAAtC,EAA6CF,IAAI,CAACE,IAAlD,CAAJ,EAApB,CAAb,CACA,GAAMC,CAAAA,SAAS,CAAGP,gBAAgB,CAACG,GAAjB,CAAqB,SAAAC,IAAI,qBAAI,oBAAC,IAAD,CAAM,IAAN,EAAW,GAAG,CAAEA,IAAI,CAACC,GAArB,CAA0B,KAAK,CAAED,IAAI,CAACE,IAAtC,EAA6CF,IAAI,CAACE,IAAlD,CAAJ,EAAzB,CAAlB,CAGA,MAAST,CAAAA,UAAU,GAAG,IAAb,cACP,oBAAC,QAAD,EACE,OAAO,cAAE,oBAAC,IAAD,EAAM,OAAO,CAAEE,gBAAf,EAAkCQ,SAAlC,CADX,eAGE,oBAAC,MAAD,EAAQ,SAAS,CAAC,qBAAlB,eACE,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,KAAK,CAAE,CAACC,SAAS,CAAC,sBAAX,CAAzB,EADF,cAEE,oBAAC,YAAD,EAAc,EAAE,CAAE,OAAlB,EAFF,CAHF,CADO,cASP,oBAAC,QAAD,EACE,OAAO,cAAE,oBAAC,IAAD,EAAM,OAAO,CAAEb,WAAf,EAA6BO,IAA7B,CADX,eAGE,oBAAC,MAAD,EAAQ,SAAS,CAAE,WAAnB,CAAiC,KAAK,gBAAIO,MAAM,CAAE,MAAZ,EAAuBX,WAAvB,CAAtC,eACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEY,WAAW,CAAE,CAAf,CAAb,CAAiC,IAAI,CAAC,MAAtC,EADF,cAEE,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,EAFF,CAHF,CATF,CAiBD,CAxBD,CAqCA,cAAehB,CAAAA,UAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Dropdown, Button, Icon, Menu } from 'antd'\r\nimport IntlMessages from \"../../util/IntlMessages\";\r\n\r\nconst DropOption = ({\r\n                      onMenuClick, menuOptions = [],menuStatus, buttonStyle, onAdminMenuClick,adminMenuOptions =[],adminStatus\r\n                    }) => {\r\n  const menu = menuOptions.map(item => <Menu.Item key={item.key} value={item.name}>{item.name}</Menu.Item>);\r\n  const adminMenu = adminMenuOptions.map(item => <Menu.Item key={item.key} value={item.name}>{item.name}</Menu.Item>)\r\n\r\n\r\n  return   menuStatus===true?\r\n    <Dropdown\r\n      overlay={<Menu onClick={onAdminMenuClick}>{adminMenu}</Menu>}\r\n    >\r\n      <Button className=\"btn-block mb-0 pb-3\">\r\n        <Icon type=\"user\" style={{transform:\"translate(-4px,-2px)\"}}/>\r\n        <IntlMessages id={'admin'}/>\r\n      </Button>\r\n    </Dropdown>:\r\n    <Dropdown\r\n      overlay={<Menu onClick={onMenuClick}>{menu}</Menu>}\r\n    >\r\n      <Button className={\"mb-0 pb-3\"}  style={{ border: 'none', ...buttonStyle }}>\r\n        <Icon style={{ marginRight: 2 }} type=\"bars\" />\r\n        <Icon type=\"down\" />\r\n      </Button>\r\n    </Dropdown>\r\n};\r\n\r\n\r\n\r\n\r\n\r\nDropOption.propTypes = {\r\n  onMenuClick: PropTypes.func,\r\n  onAdminMenuClick: PropTypes.func,\r\n  buttonStyle: PropTypes.object,\r\n  dropdownProps: PropTypes.object,\r\n};\r\n\r\nexport default DropOption\r\n"]},"metadata":{},"sourceType":"module"}