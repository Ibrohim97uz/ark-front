{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\src\\\\routes\\\\routesManagers\\\\main\\\\suggestion-and-question\\\\index.js\";\nimport React, { Component } from 'react';\nimport ApiRequest from \"../../../../services\";\nimport api from '../../../../services/app';\nimport IntlMessages, { intlMessages } from \"../../../../util/IntlMessages\";\nimport { Card, Icon, notification, Tag } from \"antd\";\nimport List from \"./components/List\";\nimport { connect } from \"react-redux\";\nimport { updateState } from \"../../../../redux/setting/action\";\nvar getSuggestionAndQuestion = api.getSuggestionAndQuestion,\n    deleteSuggestionAndQuestion = api.deleteSuggestionAndQuestion,\n    putSuggestionAndQuestion = api.putSuggestionAndQuestion;\n\nvar SuggestionAndQuestion = /*#__PURE__*/function (_Component) {\n  _inherits(SuggestionAndQuestion, _Component);\n\n  var _super = _createSuper(SuggestionAndQuestion);\n\n  function SuggestionAndQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, SuggestionAndQuestion);\n\n    _this = _super.call(this, props);\n\n    _this.onRequestFunc = function (path, data, message) {\n      ApiRequest(path, data).then(function (result) {\n        if (result.success) {\n          notification.success({\n            key: message.key,\n            message: message.messageSuccess,\n            description: message.descriptionSuccess\n          });\n          /*       this.getSuggestionAndQuestion({\r\n                     page: 0,\r\n                     size: 20\r\n                 })*/\n        } else {\n          notification.error({\n            key: message.key,\n            message: message.messageError,\n            description: message.descriptionError\n          });\n        }\n      });\n    };\n\n    _this.getSuggestionAndQuestion = function () {\n      ApiRequest(getSuggestionAndQuestion).then(function (result) {\n        if (result.success) {\n          _this.props.updateState({\n            suggestionAndQuestion: result.object\n          });\n\n          _this.setState(function (state, props) {\n            return {\n              list: result.object,\n              pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n                total: result.totalElements || result.object.length\n              })\n            };\n          });\n        }\n      });\n    };\n\n    _this.onDelete = function (dataItemId) {\n      var message = {\n        key: \"delete\",\n        messageError: intlMessages({\n          en: \"There was an error deleting\",\n          ru: \"Произошла ошибка при удалении\",\n          uz: \"O'chirishda xatolik yuz berdi\"\n        }),\n        messageSuccess: intlMessages({\n          en: \"Successfully deleted\",\n          ru: \"Успешно удален\",\n          uz: \"Muvaffaqiyatli o'chirildi\"\n        })\n      };\n\n      _this.onRequestFunc(deleteSuggestionAndQuestion, {\n        id: dataItemId\n      }, message);\n\n      _this.getSuggestionAndQuestion({\n        page: 0,\n        size: 20\n      });\n    };\n\n    _this.onExpand = function (expanded, dataItem) {\n      if (expanded && !dataItem.isStatus) {\n        var message = {\n          key: \"update\",\n          messageError: intlMessages({\n            en: \"There was an error updating\",\n            ru: \"Произошла ошибка при изменение\",\n            uz: \"Tahrirlashda xatolik yuz berdi\"\n          }),\n          messageSuccess: intlMessages({\n            en: \"Successfully updated\",\n            ru: \"Успешно изменено\",\n            uz: \"Muvaffaqqiyatli tahrirlandi\"\n          })\n        };\n\n        _this.onRequestFunc(putSuggestionAndQuestion, {\n          path: dataItem.id\n        }, message);\n      }\n\n      if (!expanded) {\n        _this.getSuggestionAndQuestion({\n          page: _this.state.pagination.current - 1,\n          size: 20\n        });\n      }\n    };\n\n    _this.onChange = function (page) {\n      _this.setState(function (state, props) {\n        return {\n          pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n            current: page\n          })\n        };\n      });\n\n      _this.onStartEvent({\n        page: page - 1\n      });\n    };\n\n    _this.onShowSizeChange = function (current, size) {\n      _this.onStartEvent({\n        page: current - 1,\n        size: size\n      });\n\n      _this.setState(function (state, props) {\n        return {\n          pagination: _objectSpread(_objectSpread({}, state.pagination), {}, {\n            current: current,\n            pageSize: size\n          })\n        };\n      });\n    };\n\n    _this.state = {\n      list: [],\n      columns: [{\n        title: /*#__PURE__*/React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 28\n          }\n        }, \"\\u2116\"),\n        key: \"№\",\n        width: 60,\n        align: \"center\",\n        render: function render(text, record, index) {\n          return index + 1;\n        }\n      }, {\n        title: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: 'isActive',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 28\n          }\n        }),\n        key: 'isStatus',\n        width: 100,\n        align: \"center\",\n        render: function render(text, record, index) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }\n          }, record.isStatus === true ? /*#__PURE__*/React.createElement(Tag, {\n            color: \"#87d068\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }\n          }, \" \", /*#__PURE__*/React.createElement(Icon, {\n            type: \"eye\",\n            className: \"mb-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 55\n            }\n          })) : /*#__PURE__*/React.createElement(Tag, {\n            color: \"#f50\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }\n          }, \" \", /*#__PURE__*/React.createElement(Icon, {\n            type: \"eye-invisible\",\n            className: \"mb-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 52\n            }\n          })));\n        }\n      }, {\n        title: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: 'fullName',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }\n        }),\n        key: 'fullName',\n        dataIndex: 'fullName'\n      }, {\n        title: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: 'email',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 28\n          }\n        }),\n        key: 'email',\n        align: \"center\",\n        dataIndex: 'email'\n      }, {\n        title: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: 'text',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 28\n          }\n        }),\n        key: 'text',\n        align: \"center\",\n        dataIndex: 'text'\n      }, {\n        title: /*#__PURE__*/React.createElement(IntlMessages, {\n          id: 'createAt',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 28\n          }\n        }),\n        key: 'createdAt',\n        align: \"center\",\n        width: 100,\n        render: function render(text, record, index) {\n          var date = new Date(record.createdAt);\n          return date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear();\n        }\n      }],\n      pagination: {\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: function showTotal(total) {\n          return \"Total \".concat(total, \" Items\");\n        },\n        current: 1,\n        total: 0,\n        pageSize: 20\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SuggestionAndQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSuggestionAndQuestion({\n        page: 0,\n        size: 20\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        visibleColumns: this.state.columns,\n        dataSource: this.state.list,\n        onExpand: this.onExpand,\n        pagination: this.state.pagination.total >= 10 ? _objectSpread(_objectSpread({}, this.state.pagination), {}, {\n          onChange: this.onChange,\n          onShowSizeChange: this.onShowSizeChange\n        }) : false,\n        onDeleteItem: this.onDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SuggestionAndQuestion;\n}(Component);\n\nexport default connect(null, {\n  updateState: updateState\n})(SuggestionAndQuestion);","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/routes/routesManagers/main/suggestion-and-question/index.js"],"names":["React","Component","ApiRequest","api","IntlMessages","intlMessages","Card","Icon","notification","Tag","List","connect","updateState","getSuggestionAndQuestion","deleteSuggestionAndQuestion","putSuggestionAndQuestion","SuggestionAndQuestion","props","onRequestFunc","path","data","message","then","result","success","key","messageSuccess","description","descriptionSuccess","error","messageError","descriptionError","suggestionAndQuestion","object","setState","state","list","pagination","total","totalElements","length","onDelete","dataItemId","en","ru","uz","id","page","size","onExpand","expanded","dataItem","isStatus","current","onChange","onStartEvent","onShowSizeChange","pageSize","columns","title","width","align","render","text","record","index","dataIndex","date","Date","createdAt","getDate","getMonth","getFullYear","showSizeChanger","showQuickJumper","showTotal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ApiRequest from \"../../../../services\";\r\nimport api from '../../../../services/app'\r\nimport IntlMessages, {intlMessages} from \"../../../../util/IntlMessages\";\r\nimport {Card, Icon, notification, Tag} from \"antd\";\r\nimport List from \"./components/List\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateState} from \"../../../../redux/setting/action\";\r\n\r\n\r\nconst {getSuggestionAndQuestion, deleteSuggestionAndQuestion,putSuggestionAndQuestion} = api;\r\n\r\nclass SuggestionAndQuestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            columns: [\r\n                {\r\n                    title: <strong>№</strong>,\r\n                    key: \"№\",\r\n                    width: 60,\r\n                    align:\"center\",\r\n                    render: (text, record, index) => index + 1,\r\n                },\r\n                {\r\n                    title: <IntlMessages id={'isActive'}/>,\r\n                    key: 'isStatus',\r\n                    width: 100,\r\n                    align:\"center\",\r\n                    render: (text, record, index) =>(\r\n                        <div>\r\n                            {record.isStatus === true ?\r\n                                <Tag color=\"#87d068\"> <Icon type=\"eye\" className=\"mb-2\"/></Tag>\r\n                                :\r\n                                <Tag color=\"#f50\"> <Icon type=\"eye-invisible\" className=\"mb-2\"/></Tag>\r\n                            }\r\n                        </div>)\r\n                },\r\n                {\r\n                    title: <IntlMessages id={'fullName'}/>,\r\n                    key: 'fullName',\r\n                    dataIndex: 'fullName'\r\n                },\r\n                {\r\n                    title: <IntlMessages id={'email'}/>,\r\n                    key: 'email',\r\n                    align:\"center\",\r\n                    dataIndex: 'email'\r\n                },\r\n                {\r\n                    title: <IntlMessages id={'text'}/>,\r\n                    key: 'text',\r\n                    align:\"center\",\r\n                    dataIndex: 'text'\r\n                },\r\n                {\r\n                    title: <IntlMessages id={'createAt'}/>,\r\n                    key: 'createdAt',\r\n                    align:\"center\",\r\n                    width: 100,\r\n                    render: (text, record, index) => {\r\n                        let date = new Date(record.createdAt);\r\n                        return date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear()\r\n                    },\r\n                }\r\n\r\n            ],\r\n            pagination: {\r\n                showSizeChanger: true,\r\n                showQuickJumper: true,\r\n                showTotal: total => `Total ${total} Items`,\r\n                current: 1,\r\n                total: 0,\r\n                pageSize: 20,\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSuggestionAndQuestion({\r\n            page: 0,\r\n            size: 20\r\n        })\r\n    }\r\n\r\n    onRequestFunc = (path, data, message) => {\r\n        ApiRequest(path, data).then((result => {\r\n            if (result.success) {\r\n                notification.success({\r\n                    key: message.key,\r\n                    message: message.messageSuccess,\r\n                    description: message.descriptionSuccess,\r\n                });\r\n         /*       this.getSuggestionAndQuestion({\r\n                    page: 0,\r\n                    size: 20\r\n                })*/\r\n            } else {\r\n                notification.error({\r\n                    key: message.key,\r\n                    message: message.messageError,\r\n                    description: message.descriptionError,\r\n                });\r\n            }\r\n        }))\r\n    };\r\n\r\n    getSuggestionAndQuestion = () => {\r\n        ApiRequest(getSuggestionAndQuestion).then((result) => {\r\n            if (result.success) {\r\n              this.props.updateState({suggestionAndQuestion:result.object});\r\n                this.setState((state, props) => ({\r\n                    list: result.object,\r\n                    pagination: {\r\n                        ...state.pagination,\r\n                        total: result.totalElements || result.object.length,\r\n                    }\r\n                }));\r\n            }\r\n        })\r\n    };\r\n\r\n    onDelete = (dataItemId) => {\r\n        let message = {\r\n            key: \"delete\",\r\n            messageError: intlMessages({\r\n                en: \"There was an error deleting\",\r\n                ru: \"Произошла ошибка при удалении\",\r\n                uz: \"O'chirishda xatolik yuz berdi\"\r\n            }),\r\n            messageSuccess: intlMessages({\r\n                en: \"Successfully deleted\",\r\n                ru: \"Успешно удален\",\r\n                uz: \"Muvaffaqiyatli o'chirildi\"\r\n            }),\r\n        };\r\n        this.onRequestFunc(deleteSuggestionAndQuestion, {id: dataItemId}, message)\r\n      this.getSuggestionAndQuestion({\r\n        page: 0,\r\n        size: 20\r\n      })\r\n    };\r\n    onExpand = (expanded, dataItem) => {\r\n        if (expanded && !dataItem.isStatus) {\r\n            let message = {\r\n                key: \"update\",\r\n                messageError: intlMessages({\r\n                    en: \"There was an error updating\",\r\n                    ru: \"Произошла ошибка при изменение\",\r\n                    uz: \"Tahrirlashda xatolik yuz berdi\"\r\n                }),\r\n                messageSuccess: intlMessages({\r\n                    en: \"Successfully updated\",\r\n                    ru: \"Успешно изменено\",\r\n                    uz: \"Muvaffaqqiyatli tahrirlandi\"\r\n                }),\r\n            };\r\n            this.onRequestFunc(putSuggestionAndQuestion, {path: dataItem.id}, message)\r\n        }\r\n        if (!expanded){\r\n                   this.getSuggestionAndQuestion({\r\n                page: this.state.pagination.current-1,\r\n                size: 20\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    onChange = (page) => {\r\n        this.setState((state, props) => ({\r\n            pagination: {\r\n                ...state.pagination,\r\n                current:page\r\n            }\r\n        }));\r\n        this.onStartEvent({page:page-1});\r\n    };\r\n    onShowSizeChange = (current, size) => {\r\n        this.onStartEvent({page:current-1,size:size});\r\n        this.setState((state, props) => ({\r\n            pagination: {\r\n                ...state.pagination,\r\n                current:current,\r\n                pageSize:size\r\n            }\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <List visibleColumns={this.state.columns}\r\n                      dataSource={this.state.list}\r\n                      onExpand={this.onExpand}\r\n                      pagination={this.state.pagination.total >= 10 ? {\r\n                          ...this.state.pagination,\r\n                          onChange: this.onChange,\r\n                          onShowSizeChange: this.onShowSizeChange\r\n                      } : false}\r\n                      onDeleteItem={this.onDelete}/>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, {updateState})(SuggestionAndQuestion);\r\n\r\n"]},"metadata":{},"sourceType":"module"}