{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Card,notification}from\"antd\";import ApiRequest from\"../../../../../services\";import api from'../../../../../services/app';import Filter from'./components/Filter';import Modal from'./components/Modal';import List from'./components/List';import IntlMessages,{intlMessages}from\"../../../../../util/IntlMessages\";import{connect}from\"react-redux\";import{onAuthUser}from\"../../../../../redux/auth/action\";var getClientPoint=api.getClientPoint,postClientPoint=api.postClientPoint,getCountry=api.getCountry;var Region=/*#__PURE__*/function(_Component){_inherits(Region,_Component);var _super=_createSuper(Region);function Region(props){var _this;_classCallCheck(this,Region);_this=_super.call(this,props);_this.getInit=function(){if(_this.props.location.state.id){_this.getPoints();}ApiRequest(getCountry).then(function(result){if(result.success){_this.setState(function(state,props){return{countries:result._embedded.list};});}});};_this.onRequestFunc=function(path,data,message){ApiRequest(path,data).then(function(result){if(result.success){_this.getPoints();_this.setState({actionType:'create',modalVisible:false,currentItem:{}});notification.success({key:message.key,message:message.messageSuccess,description:message.descriptionSuccess});}else{notification.error({key:message.key,message:message.messageError,description:message.descriptionError});}});};_this.onSubmit=function(data){var message={};data['clientId']=_this.props.location.state.id;if(_this.state.actionType===\"create\"){message={key:\"create\",messageError:intlMessages({en:\"There was an error creating\",ru:\"Произошла ошибка при создании\",uz:\"Yaratishda xatolik yuz berdi\"}),messageSuccess:intlMessages({en:\"Successfully created\",ru:\"Успешно создан\",uz:\"Muvaffaqqiyatli yaratildi\"})};_this.onRequestFunc(postClientPoint,data,message);}if(_this.state.actionType===\"update\"){message={key:\"update\",messageError:intlMessages({en:\"There was an error updating\",ru:\"Произошла ошибка при изменение\",uz:\"Tahrirlashda xatolik yuz berdi\"}),messageSuccess:intlMessages({en:\"Successfully updated\",ru:\"Успешно изменено\",uz:\"Muvaffaqqiyatli tahrirlandi\"})};_this.onRequestFunc(postClientPoint,data,message);}};_this.onCancel=function(){_this.setState({modalVisible:false,actionType:'create'});};_this.onAdd=function(){_this.setState({modalVisible:true,actionType:'create'});};_this.onEditItem=function(dataItem){_this.setState({actionType:\"update\",currentItem:dataItem,modalVisible:true});};_this.state={actionType:'create',align:\"center\",modalVisible:false,columns:[{title:/*#__PURE__*/React.createElement(\"strong\",null,\"\\u2116\"),key:\"№\",width:60,render:function render(text,record,index){return index+1;}},{title:/*#__PURE__*/React.createElement(IntlMessages,{id:'date'}),key:\"date\",align:\"center\",render:function render(text,record,index){return record.date.substring(0,10);}},{title:/*#__PURE__*/React.createElement(IntlMessages,{id:'fromCountry'}),key:\"fromCountry\",align:\"center\",render:function render(text,record,index){return intlMessages({en:record.fromCountry&&record.fromCountry.nameEn,ru:record.fromCountry&&record.fromCountry.nameRu,uz:record.fromCountry&&record.fromCountry.nameUz});}},{title:/*#__PURE__*/React.createElement(IntlMessages,{id:'toCountry'}),key:\"toCountry\",align:\"toCountry\",render:function render(text,record,index){return intlMessages({en:record.toCountry&&record.toCountry.nameEn,ru:record.toCountry&&record.toCountry.nameRu,uz:record.toCountry&&record.toCountry.nameUz});}}],currentItem:{},countries:[],list:[]};return _this;}_createClass(Region,[{key:\"componentDidMount\",value:function componentDidMount(){this.getInit();}},{key:\"getPoints\",value:function getPoints(){var _this2=this;ApiRequest(getClientPoint,{clientId:this.props.location.state.id}).then(function(result){if(result.success){_this2.setState(function(state,props){return{list:result.object.points};});}});}},{key:\"render\",value:function render(){var _this$state=this.state,currentItem=_this$state.currentItem,modalVisible=_this$state.modalVisible,columns=_this$state.columns,countries=_this$state.countries,list=_this$state.list,actionType=_this$state.actionType;return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Filter,{onAdd:this.onAdd}),/*#__PURE__*/React.createElement(List,{visibleColumns:columns,dataSource:list,onEditItem:this.onEditItem,pagination:list&&list.length>20}),/*#__PURE__*/React.createElement(Modal,{onSubmit:this.onSubmit,onCancel:this.onCancel,countries:countries,actionType:actionType,modalVisible:modalVisible,currentItem:actionType==='create'?{}:currentItem}));}}]);return Region;}(Component);var mapStateToProps=function mapStateToProps(_ref){var routing=_ref.routing;return routing.location;};export default connect(mapStateToProps,{onAuthUser:onAuthUser})(Region);","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/routes/routesManagers/main/clients/client/index.js"],"names":["React","Component","Card","notification","ApiRequest","api","Filter","Modal","List","IntlMessages","intlMessages","connect","onAuthUser","getClientPoint","postClientPoint","getCountry","Region","props","getInit","location","state","id","getPoints","then","result","success","setState","countries","_embedded","list","onRequestFunc","path","data","message","actionType","modalVisible","currentItem","key","messageSuccess","description","descriptionSuccess","error","messageError","descriptionError","onSubmit","en","ru","uz","onCancel","onAdd","onEditItem","dataItem","align","columns","title","width","render","text","record","index","date","substring","fromCountry","nameEn","nameRu","nameUz","toCountry","clientId","object","points","length","mapStateToProps","routing"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, notification} from \"antd\";\r\nimport ApiRequest from \"../../../../../services\";\r\nimport api from '../../../../../services/app'\r\nimport Filter from './components/Filter'\r\nimport Modal from './components/Modal'\r\nimport List from './components/List'\r\nimport IntlMessages, {intlMessages} from \"../../../../../util/IntlMessages\";\r\nimport { connect } from \"react-redux\";\r\nimport { onAuthUser } from \"../../../../../redux/auth/action\";\r\n\r\nconst {getClientPoint, postClientPoint,getCountry} = api;\r\n\r\nclass Region extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      actionType: 'create',\r\n      align: \"center\",\r\n      modalVisible: false,\r\n      columns: [{\r\n        title: <strong>№</strong>,\r\n        key: \"№\",\r\n        width: 60,\r\n        render: (text, record, index) => index + 1,\r\n      },\r\n        {\r\n          title: <IntlMessages id={'date'} />,\r\n          key: \"date\",\r\n          align: \"center\",\r\n          render: (text, record, index) => record.date.substring(0,10)\r\n        },\r\n        {\r\n          title: <IntlMessages id={'fromCountry'} />,\r\n          key: \"fromCountry\",\r\n          align: \"center\",\r\n          render: (text, record, index) => intlMessages({\r\n            en: record.fromCountry && record.fromCountry.nameEn,\r\n            ru: record.fromCountry && record.fromCountry.nameRu,\r\n            uz: record.fromCountry && record.fromCountry.nameUz\r\n          })\r\n        },\r\n        {\r\n          title: <IntlMessages id={'toCountry'} />,\r\n          key: \"toCountry\",\r\n          align: \"toCountry\",\r\n          render: (text, record, index) => intlMessages({\r\n            en: record.toCountry && record.toCountry.nameEn,\r\n            ru: record.toCountry && record.toCountry.nameRu,\r\n            uz: record.toCountry && record.toCountry.nameUz\r\n          })\r\n        }\r\n      ],\r\n      currentItem: {},\r\n      countries: [],\r\n      list: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getInit()\r\n  }\r\n\r\n  getInit = () => {\r\n    if (this.props.location.state.id){\r\n      this.getPoints()\r\n    }\r\n\r\n    ApiRequest(getCountry).then((result => {\r\n      if (result.success) {\r\n        this.setState((state, props) => ({\r\n          countries: result._embedded.list,\r\n        }));\r\n      }\r\n    }))\r\n  };\r\n\r\n  getPoints(){\r\n    ApiRequest(getClientPoint,{clientId:this.props.location.state.id}).then((result => {\r\n      if (result.success) {\r\n        this.setState((state, props) => ({\r\n          list: result.object.points,\r\n        }));\r\n      }\r\n    }))\r\n  }\r\n\r\n  onRequestFunc = (path, data, message) => {\r\n    ApiRequest(path, data).then((result => {\r\n      if (result.success) {\r\n        this.getPoints();\r\n        this.setState({\r\n          actionType: 'create',\r\n          modalVisible: false,\r\n          currentItem: {},\r\n        });\r\n        notification.success({\r\n          key: message.key,\r\n          message: message.messageSuccess,\r\n          description: message.descriptionSuccess,\r\n        });\r\n      } else {\r\n        notification.error({\r\n          key: message.key,\r\n          message: message.messageError,\r\n          description: message.descriptionError,\r\n        });\r\n      }\r\n    }))\r\n  };\r\n\r\n\r\n  onSubmit = (data) => {\r\n    let message = {};\r\n    data['clientId']=this.props.location.state.id;\r\n    if (this.state.actionType === \"create\") {\r\n      message = {\r\n        key: \"create\",\r\n        messageError: intlMessages({en:\"There was an error creating\",ru:\"Произошла ошибка при создании\",uz:\"Yaratishda xatolik yuz berdi\"}),\r\n        messageSuccess: intlMessages({en:\"Successfully created\",ru:\"Успешно создан\",uz:\"Muvaffaqqiyatli yaratildi\"}),\r\n      };\r\n      this.onRequestFunc(postClientPoint, data, message)\r\n    }\r\n    if (this.state.actionType === \"update\") {\r\n      message = {\r\n        key: \"update\",\r\n        messageError: intlMessages({en:\"There was an error updating\",ru:\"Произошла ошибка при изменение\",uz:\"Tahrirlashda xatolik yuz berdi\"}),\r\n        messageSuccess: intlMessages({en:\"Successfully updated\",ru:\"Успешно изменено\",uz:\"Muvaffaqqiyatli tahrirlandi\"}),\r\n      };\r\n      this.onRequestFunc(postClientPoint, data, message)\r\n    }\r\n  };\r\n  onCancel = () => {\r\n    this.setState({modalVisible: false, actionType: 'create'})\r\n  };\r\n  onAdd = () => {\r\n    this.setState({modalVisible: true, actionType: 'create'})\r\n  };\r\n  onEditItem = (dataItem) => {\r\n    this.setState({\r\n      actionType: \"update\",\r\n      currentItem: dataItem,\r\n      modalVisible: true,\r\n    })\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const {currentItem, modalVisible, columns, countries, list, actionType} = this.state;\r\n    return (\r\n      <Card>\r\n        <Filter\r\n            onAdd={this.onAdd}\r\n\r\n        />\r\n        <List visibleColumns={columns}\r\n              dataSource={list}\r\n              onEditItem={this.onEditItem}\r\n              pagination={list && list.length>20}\r\n             />\r\n        <Modal\r\n          onSubmit={this.onSubmit}\r\n          onCancel={this.onCancel}\r\n          countries={countries}\r\n          actionType={actionType}\r\n          modalVisible={modalVisible}\r\n          currentItem={actionType === 'create' ? {} : currentItem}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({routing}) => {\r\n  return routing.location;\r\n};\r\n\r\nexport default connect(mapStateToProps, {onAuthUser})(Region);\r\n"]},"metadata":{},"sourceType":"module"}