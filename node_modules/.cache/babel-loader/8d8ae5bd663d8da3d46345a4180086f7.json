{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\src\\\\routes\\\\routesManagers\\\\settings\\\\moderators\\\\components\\\\Modal.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Form, Modal, Switch } from 'antd/lib/index';\nimport IntlMessages from \"util/IntlMessages\";\nimport { intlMessages } from \"../../../../../util/IntlMessages\";\nimport { FileUpload } from \"../../../../../components/CustomComponents\";\nvar FormItem = Form.Item;\nvar formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\n\nvar modal = function modal(_ref) {\n  var currentItem = _ref.currentItem,\n      onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel,\n      modalVisible = _ref.modalVisible,\n      actionType = _ref.actionType,\n      formItems = _ref.formItems,\n      onChangeFile = _ref.onChangeFile,\n      file = _ref.file,\n      _ref$form = _ref.form,\n      getFieldDecorator = _ref$form.getFieldDecorator,\n      validateFields = _ref$form.validateFields,\n      getFieldsValue = _ref$form.getFieldsValue;\n\n  var handleOk = function handleOk() {\n    validateFields(function (errors) {\n      if (errors) {\n        return;\n      }\n\n      var formData = getFieldsValue();\n      formData['enabled'] = formData['enabled'] === undefined ? true : formData['enabled'];\n      formData['file'] = file === null ? {} : file.file;\n      formData['fileUpload'] = true;\n\n      if (actionType === \"update\") {\n        formData['id'] = currentItem.id;\n        if (file && file.fileStatus === \"update\") delete formData['fileId'];\n\n        if (file && file.fileStatus === \"delete\") {\n          delete formData['fileId'];\n          formData['file'] = {};\n        }\n\n        if (file && !file.fileStatus) {\n          formData['file'] = {};\n          formData['fileId'] = currentItem.attachment && currentItem.attachment.id;\n        }\n      }\n\n      onSubmit(formData);\n    });\n  };\n\n  var dynamicFormItems = formItems.map(function (formItem) {\n    return /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      key: formItem.name,\n      className: \"mb-0\",\n      label: formItem.label,\n      hasFeedback: true\n    }, formItemLayout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }), getFieldDecorator(formItem.name, _objectSpread({\n      initialValue: currentItem[formItem.name]\n    }, formItem))(formItem.obj));\n  });\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: modalVisible,\n    title: actionType === \"create\" ? intlMessages({\n      en: \"Create new moderator\",\n      ru: \"Создать новую модератор\",\n      uz: \"Yangi moderator yaratish\"\n    }) : intlMessages({\n      en: \"Update moderator\",\n      ru: \"Изменить модератор\",\n      uz: \"Moderatorni tahrirlash\"\n    }),\n    onOk: handleOk,\n    destroyOnClose: true,\n    onCancel: onCancel,\n    maskClosable: true,\n    wrapClassName: 'vertical-center-modal',\n    cancelText: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: 'cancel',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }),\n    okText: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: 'save',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, dynamicFormItems, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, Object.assign({\n    key: \"enabled\",\n    className: \"mb-0\",\n    label: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"enabled\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 59\n      }\n    }),\n    hasFeedback: true\n  }, formItemLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), getFieldDecorator('enabled', {\n    initialValue: actionType === \"create\" ? true : currentItem && currentItem.enabled,\n    valuePropName: \"checked\"\n  })( /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }\n  })))), /*#__PURE__*/React.createElement(FileUpload, {\n    name: \"file\",\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: 'file',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }\n    }),\n    types: [\"image/jpeg\", \"image/png\", \"image/jpg\"],\n    size: 50,\n    file: file,\n    onChangeFile: onChangeFile,\n    formItemLayout: formItemLayout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n};\n\nmodal.propTypes = {\n  form: PropTypes.object.isRequired,\n  type: PropTypes.string,\n  item: PropTypes.object,\n  onSubmit: PropTypes.func\n};\nexport default Form.create()(modal);","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/routes/routesManagers/settings/moderators/components/Modal.js"],"names":["React","PropTypes","Col","Form","Modal","Switch","IntlMessages","intlMessages","FileUpload","FormItem","Item","formItemLayout","labelCol","span","wrapperCol","modal","currentItem","onSubmit","onCancel","modalVisible","actionType","formItems","onChangeFile","file","form","getFieldDecorator","validateFields","getFieldsValue","handleOk","errors","formData","undefined","id","fileStatus","attachment","dynamicFormItems","map","formItem","name","label","initialValue","obj","en","ru","uz","enabled","valuePropName","propTypes","object","isRequired","type","string","item","func","create"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Col, Form, Modal, Switch,} from 'antd/lib/index'\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport {intlMessages} from \"../../../../../util/IntlMessages\";\r\nimport {FileUpload} from \"../../../../../components/CustomComponents\";\r\n\r\nconst FormItem = Form.Item;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\nconst modal = ({\r\n                 currentItem,\r\n                 onSubmit,\r\n                 onCancel,\r\n                 modalVisible,\r\n                 actionType,\r\n                 formItems,\r\n                 onChangeFile,\r\n                 file,\r\n                 form: {\r\n                   getFieldDecorator,\r\n                   validateFields,\r\n                   getFieldsValue,\r\n                 },\r\n               }) => {\r\n  const handleOk = () => {\r\n    validateFields((errors) => {\r\n      if (errors) {\r\n        return\r\n      }\r\n      let formData = getFieldsValue();\r\n      formData['enabled'] = formData['enabled'] === undefined ? true : formData['enabled'];\r\n      formData['file'] = file === null ? {} : file.file;\r\n      formData['fileUpload'] = true;\r\n      if (actionType === \"update\") {\r\n        formData['id'] = currentItem.id;\r\n        if (file && file.fileStatus === \"update\")\r\n          delete formData['fileId'];\r\n        if (file && file.fileStatus === \"delete\") {\r\n          delete  formData['fileId'];\r\n          formData['file'] = {};\r\n        }\r\n        if (file && !file.fileStatus) {\r\n          formData['file'] = {};\r\n          formData['fileId'] = currentItem.attachment && currentItem.attachment.id;\r\n        }\r\n      }\r\n      onSubmit(formData)\r\n    })\r\n  };\r\n\r\n  const dynamicFormItems = formItems.map((formItem) =>\r\n    <FormItem key={formItem.name} className=\"mb-0\" label={formItem.label} hasFeedback {...formItemLayout}>\r\n      {getFieldDecorator(formItem.name, {\r\n        initialValue: currentItem[formItem.name],\r\n        ...formItem\r\n      })(formItem.obj)}\r\n    </FormItem>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={modalVisible}\r\n      title={actionType === \"create\" ? intlMessages({\r\n        en: \"Create new moderator\",\r\n        ru: \"Создать новую модератор\",\r\n        uz: \"Yangi moderator yaratish\"\r\n      }) : intlMessages({en: \"Update moderator\", ru: \"Изменить модератор\", uz: \"Moderatorni tahrirlash\"})}\r\n      onOk={handleOk}\r\n      destroyOnClose={true}\r\n      onCancel={onCancel}\r\n      maskClosable={true}\r\n      wrapClassName={'vertical-center-modal'}\r\n      cancelText={<IntlMessages id={'cancel'}/>}\r\n      okText={<IntlMessages id={'save'}/>}>\r\n      <Form layout=\"horizontal\">\r\n        {dynamicFormItems}\r\n\r\n        <Col>\r\n          <FormItem key=\"enabled\" className=\"mb-0\" label={<IntlMessages id=\"enabled\"/>}\r\n                    hasFeedback {...formItemLayout}>\r\n\r\n            {getFieldDecorator('enabled', {\r\n              initialValue: actionType === \"create\" ? true : currentItem && currentItem.enabled,\r\n              valuePropName: \"checked\"\r\n            })\r\n            (<Switch/>)\r\n            }\r\n          </FormItem>\r\n        </Col>\r\n        <FileUpload\r\n          name={\"file\"}\r\n          title={<IntlMessages id={'file'}/>}\r\n          types={[\"image/jpeg\",\r\n            \"image/png\",\r\n            \"image/jpg\"]}\r\n          size={50}\r\n          file={file}\r\n          onChangeFile={onChangeFile}\r\n          formItemLayout={formItemLayout}\r\n        />\r\n      </Form>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nmodal.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  type: PropTypes.string,\r\n  item: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form.create()(modal)\r\n"]},"metadata":{},"sourceType":"module"}