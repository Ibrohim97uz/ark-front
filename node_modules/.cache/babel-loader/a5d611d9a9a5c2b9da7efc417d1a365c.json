{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\src\\\\containers\\\\Topbar\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Layout, Popover } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport { switchLanguage, toggleCollapsedSideNav } from \"../../redux/setting/action\";\nimport UserInfo from \"components/UserInfo\";\nimport Auxiliary from \"util/Auxiliary\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, TAB_SIZE } from \"../../constants/ThemeSetting\";\nimport { connect } from \"react-redux\";\nimport config from '../../util/config';\nvar locales = config.locales;\nvar Header = Layout.Header;\n\nvar Topbar = /*#__PURE__*/function (_Component) {\n  _inherits(Topbar, _Component);\n\n  var _super = _createSuper(Topbar);\n\n  function Topbar() {\n    var _this;\n\n    _classCallCheck(this, Topbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      searchText: ''\n    };\n\n    _this.languageMenu = function () {\n      return /*#__PURE__*/React.createElement(CustomScrollbars, {\n        className: \"gx-popover-lang-scroll\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"gx-sub-popover\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, locales.map(function (language) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"gx-media gx-pointer\",\n          key: JSON.stringify(language),\n          onClick: function onClick(e) {\n            return _this.props.switchLanguage(language);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"flag flag-24 gx-mr-2 flag-\".concat(language.icon),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"gx-language-text\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, language.name));\n      })));\n    };\n\n    _this.updateSearchChatUser = function (evt) {\n      _this.setState({\n        searchText: evt.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Topbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          locale = _this$props.locale,\n          width = _this$props.width,\n          navCollapsed = _this$props.navCollapsed,\n          navStyle = _this$props.navStyle;\n      return /*#__PURE__*/React.createElement(Auxiliary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, navStyle === NAV_STYLE_DRAWER || (navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) && width < TAB_SIZE ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-linebar gx-mr-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-menu\",\n        onClick: function onClick() {\n          _this2.props.toggleCollapsedSideNav(!navCollapsed);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      })) : null, /*#__PURE__*/React.createElement(Link, {\n        to: \"/main/dashboard\",\n        className: \"gx-d-block gx-d-lg-none gx-pointer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/ark-client/logo-white.png\"),\n        height: 50,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"gx-header-notifications gx-ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"gx-language\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Popover, {\n        overlayClassName: \"gx-popover-horizantal\",\n        placement: \"bottomRight\",\n        content: this.languageMenu(),\n        trigger: \"click\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gx-pointer gx-flex-row gx-align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"flag flag-24 flag-\".concat(locale.icon),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gx-pl-2 gx-language-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, locale.name), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon icon-chevron-down gx-pl-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      })))), width >= TAB_SIZE ? null : /*#__PURE__*/React.createElement(Auxiliary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"gx-user-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(UserInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }\n      }))))));\n    }\n  }]);\n\n  return Topbar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var locale = settings.locale,\n      navStyle = settings.navStyle,\n      navCollapsed = settings.navCollapsed,\n      width = settings.width;\n  return {\n    locale: locale,\n    navStyle: navStyle,\n    navCollapsed: navCollapsed,\n    width: width\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCollapsedSideNav: toggleCollapsedSideNav,\n  switchLanguage: switchLanguage\n})(Topbar);","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/containers/Topbar/index.js"],"names":["React","Component","Layout","Popover","Link","CustomScrollbars","switchLanguage","toggleCollapsedSideNav","UserInfo","Auxiliary","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","TAB_SIZE","connect","config","locales","Header","Topbar","state","searchText","languageMenu","map","language","JSON","stringify","e","props","icon","name","updateSearchChatUser","evt","setState","target","value","locale","width","navCollapsed","navStyle","require","mapStateToProps","settings"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Layout, Popover} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport {switchLanguage, toggleCollapsedSideNav} from \"../../redux/setting/action\";\r\nimport UserInfo from \"components/UserInfo\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\n\r\nimport {NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, TAB_SIZE} from \"../../constants/ThemeSetting\";\r\nimport {connect} from \"react-redux\";\r\nimport config from '../../util/config'\r\nconst {locales} = config;\r\nconst {Header} = Layout;\r\n\r\nclass Topbar extends Component {\r\n\r\n  state = {\r\n    searchText: '',\r\n  };\r\n\r\n  languageMenu = () => (\r\n    <CustomScrollbars className=\"gx-popover-lang-scroll\">\r\n      <ul className=\"gx-sub-popover\">\r\n        {locales.map(language =>\r\n          <li className=\"gx-media gx-pointer\" key={JSON.stringify(language)} onClick={(e) =>\r\n            this.props.switchLanguage(language)\r\n          }>\r\n            <i className={`flag flag-24 gx-mr-2 flag-${language.icon}`}/>\r\n            <span className=\"gx-language-text\">{language.name}</span>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </CustomScrollbars>);\r\n\r\n  updateSearchChatUser = (evt) => {\r\n    this.setState({\r\n      searchText: evt.target.value,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const {locale, width, navCollapsed, navStyle} = this.props;\r\n    return (\r\n      <Auxiliary>\r\n        <Header>\r\n          {navStyle === NAV_STYLE_DRAWER || ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) && width < TAB_SIZE) ?\r\n            <div className=\"gx-linebar gx-mr-3\">\r\n              <i className=\"gx-icon-btn icon icon-menu\"\r\n                 onClick={() => {\r\n                   this.props.toggleCollapsedSideNav(!navCollapsed);\r\n                 }}\r\n              />\r\n            </div> : null}\r\n          <Link to=\"/main/dashboard\" className=\"gx-d-block gx-d-lg-none gx-pointer\">\r\n            <img alt=\"\" src={require(\"assets/images/ark-client/logo-white.png\")} height={50}/></Link>\r\n\r\n   {/*       <SearchBox styleName=\"gx-d-none gx-d-lg-block gx-lt-icon-search-bar-lg\"\r\n                     placeholder={intlMessages({en:\"Search in app...\",ru:\"Поиск в приложении...\",uz:\"Ilovadan qidirish...\"})}\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.state.searchText}/>*/}\r\n          <ul className=\"gx-header-notifications gx-ml-auto\">\r\n     {/*       <li className=\"gx-notify gx-notify-search gx-d-inline-block gx-d-lg-none\">\r\n              <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={\r\n                <SearchBox styleName=\"gx-popover-search-bar\"\r\n                           placeholder={intlMessages({en:\"Search in app...\",ru:\"Поиск в приложении\",uz:\"Ilovadan qidirish\"})}\r\n                           onChange={this.updateSearchChatUser.bind(this)}\r\n                           value={this.state.searchText}/>\r\n              } trigger=\"click\">\r\n                <span className=\"gx-pointer gx-d-block\"><i className=\"icon icon-search-new\"/></span>\r\n              </Popover>\r\n            </li>*/}\r\n            <li className=\"gx-language\">\r\n              <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={this.languageMenu()}\r\n                       trigger=\"click\">\r\n                <span className=\"gx-pointer gx-flex-row gx-align-items-center\">\r\n                  <i className={`flag flag-24 flag-${locale.icon}`}/>\r\n                  <span className=\"gx-pl-2 gx-language-name\">{locale.name}</span>\r\n                  <i className=\"icon icon-chevron-down gx-pl-2\"/>\r\n                </span>\r\n              </Popover>\r\n            </li>\r\n            {width >= TAB_SIZE ? null :\r\n              <Auxiliary>\r\n                <li className=\"gx-user-nav\"><UserInfo/></li>\r\n              </Auxiliary>\r\n            }\r\n          </ul>\r\n        </Header>\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {locale, navStyle, navCollapsed, width} = settings;\r\n  return {locale, navStyle, navCollapsed, width}\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedSideNav, switchLanguage})(Topbar);\r\n"]},"metadata":{},"sourceType":"module"}