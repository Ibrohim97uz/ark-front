{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\src\\\\routes\\\\login\\\\index.js\";\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport firebase from 'firebase/app';\nimport { parsePhoneNumber } from 'libphonenumber-js';\nimport { MaskedInput } from \"antd-mask-input\";\nimport { TOKEN_NAME } from \"util/constants\";\nimport { Button, Col, Form, Input, Row, notification } from \"antd\";\nimport ApiRequest from '../../services/index';\nimport api from '../../services/app';\nimport loginBack from '../../assets/images/ark-client/login-back.jpg';\nimport { firebaseAuth } from '../../firebase/firebase';\nimport IntlMessages, { intlMessages } from \"../../util/IntlMessages\";\nimport { onAuthUser } from \"../../redux/auth/action\";\nvar userCheckPhone = api.userCheckPhone,\n    checkUser = api.checkUser,\n    setPassword = api.setPassword,\n    signIn = api.signIn,\n    userMe = api.userMe;\n\nvar Login = /*#__PURE__*/function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.recaptchaVerifier = null;\n\n    _this.checkPhone = function (payload) {\n      ApiRequest(userCheckPhone, {\n        phoneNumber: payload\n      }).then(function (result) {\n        if (result.success) {\n          _this.setState({\n            checkPhoneProcess: false,\n            hasRegistered: result.hasRegistered,\n            hasPassword: result.hasPassword,\n            isAdmin: result.isAdmin,\n            isLoading: false\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: '/login',\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 16\n            }\n          });\n        }\n      });\n    };\n\n    _this.checkState = function (phoneNumber) {\n      try {\n        if (parsePhoneNumber(phoneNumber).isValid()) {\n          _this.setState({\n            isLoading: true\n          });\n\n          _this.checkPhone(phoneNumber);\n        } else {\n          _this.setState({\n            checkPhoneProcess: true,\n            hasRegistered: false\n          });\n        }\n      } catch (e) {\n        _this.setState({\n          checkPhoneProcess: true,\n          hasRegistered: false\n        });\n      }\n    };\n\n    _this.checkUser = function () {\n      var _this$state = _this.state,\n          password = _this$state.password,\n          phoneNumber = _this$state.phoneNumber;\n      return ApiRequest(checkUser, {\n        password: password,\n        phoneNumber: phoneNumber\n      });\n    };\n\n    _this.sign = function (payload) {\n      _this.setState({\n        isLoading: true\n      });\n\n      if (!payload.hasPassword) {\n        var setPasswordBody = {\n          phoneNumber: payload.phoneNumber,\n          password: payload.password,\n          prePassword: payload.prePassword\n        };\n        ApiRequest(setPassword, setPasswordBody).then(function (res) {\n          if (res.success) {\n            _this.setState({\n              hasPassword: true\n            });\n          }\n        });\n\n        _this.signInOrSignUp(payload);\n      } else {\n        _this.signInOrSignUp(payload);\n      }\n    };\n\n    _this.signInOrSignUp = function (payload) {\n      var reqBody = {};\n\n      if (payload.hasRegistered) {\n        reqBody = {\n          phoneNumber: payload.phoneNumber,\n          password: payload.password\n        };\n      } else {\n        reqBody = payload;\n      }\n\n      ApiRequest(signIn, reqBody).then(function (data) {\n        _this.setState({\n          verificationCode: ''\n        });\n\n        if (data.body && data.body.accessToken !== undefined) {\n          localStorage.setItem(TOKEN_NAME, data.body.tokenType + \" \" + data.body.accessToken);\n          ApiRequest(userMe).then(function (result) {\n            if (result.success) {\n              _this.props.onAuthUser(result.object);\n\n              _this.forceUpdate();\n            } else {\n              localStorage.removeItem(TOKEN_NAME);\n\n              _this.props.onAuthUser(null);\n            }\n          });\n        }\n      }).finally(function () {\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.state = {\n      phoneNumber: '',\n      password: '',\n      checkPhoneProcess: true,\n      hasRegistered: false,\n      reCaptcha: null,\n      intervalId: '',\n      confirmationResult: null,\n      isVerifyProcess: false,\n      code: '',\n      lastName: '',\n      confirmPassword: '',\n      hasPassword: true,\n      prePassword: '',\n      isLoading: false,\n      isAdmin: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cont = document.getElementById('reCaptcha');\n      this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(cont, {\n        'size': 'invisible',\n        'callback': function callback(res) {},\n        'expired-callback': function expiredCallback() {},\n        'error-callback': function errorCallback() {\n          _this2.setState({\n            isNotify: true,\n            isLoading: false,\n            toasterProps: {\n              message: 'Xatolik yuz berdi qaytadan urunib ko\\'ring'\n            }\n          });\n\n          notification.warning({\n            key: 'warning',\n            message: intlMessages({\n              en: \"An error occurred. Please try again\",\n              ru: \"Произошла ошибка. Пожалуйста, попробуйте еще раз\",\n              uz: \"Xatolik yuz berdi qaytadan urunib ko'ring\"\n            })\n          });\n        }\n      });\n      this.recaptchaVerifier.render();\n      this.setState({\n        reCaptcha: this.recaptchaVerifier\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // const {authUser} = this.props;\n      // if (authUser){\n      //   return <Redirect to={'/main/dashboard'}/>\n      // }\n      var _this$state2 = this.state,\n          checkPhoneProcess = _this$state2.checkPhoneProcess,\n          hasRegistered = _this$state2.hasRegistered,\n          phoneNumber = _this$state2.phoneNumber,\n          password = _this$state2.password,\n          isLoading = _this$state2.isLoading,\n          reCaptcha = _this$state2.reCaptcha,\n          intervalId = _this$state2.intervalId,\n          isVerifyProcess = _this$state2.isVerifyProcess,\n          confirmationResult = _this$state2.confirmationResult,\n          code = _this$state2.code,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          codeTime = _this$state2.codeTime,\n          hasPassword = _this$state2.hasPassword,\n          prePassword = _this$state2.prePassword,\n          isAdmin = _this$state2.isAdmin;\n\n      var updatePhone = function updatePhone(e) {\n        var _this3$setState;\n\n        _this3.setState((_this3$setState = {}, _defineProperty(_this3$setState, e.target.name, e.target.value), _defineProperty(_this3$setState, \"isLoading\", false), _this3$setState));\n\n        _this3.checkState(e.target.value);\n      };\n\n      var updateState = function updateState(e) {\n        var _this3$setState2;\n\n        _this3.setState((_this3$setState2 = {}, _defineProperty(_this3$setState2, e.target.name, e.target.value), _defineProperty(_this3$setState2, \"isLoading\", false), _this3$setState2));\n      };\n\n      var login = function login(e) {\n        e.preventDefault();\n\n        if (hasRegistered && hasPassword && isAdmin) {\n          _this3.checkUser().then(function (res) {\n            if (res.success) {\n              // sendCode();\n              _this3.signInOrSignUp({\n                password: password,\n                phoneNumber: phoneNumber\n              });\n            } else {\n              notification.warning({\n                key: 'phoneNumber',\n                message: \"Password\",\n                description: \"Password warning\"\n              });\n            }\n          });\n        } else if (hasRegistered && hasPassword && !isAdmin) {\n          _this3.checkUser().then(function (res) {\n            if (res.success) {\n              _this3.signInOrSignUp({\n                password: password,\n                phoneNumber: phoneNumber\n              }); // this.sign({\n              //     phoneNumber,\n              //     password,\n              //     hasRegistered,\n              //     hasPassword,\n              // })\n\n            } else {\n              notification.warning({\n                key: 'phoneNumber',\n                message: intlMessages({\n                  en: \"Password\",\n                  ru: \"Пароль\",\n                  uz: \"Parol\"\n                }),\n                description: intlMessages({\n                  en: \"The password is incorrect\",\n                  ru: \"Пароль неправильный\",\n                  uz: \"Parol noto'g'ri\"\n                })\n              });\n            }\n          });\n        } else {\n          notification.warning({\n            key: 'phoneNumber',\n            message: intlMessages({\n              en: \"Phone number!\",\n              ru: \"Номер телефона!\",\n              uz: \"Telefon raqam!\"\n            }),\n            description: intlMessages({\n              en: \"The phone number is incorrect\",\n              ru: \"Номер телефона неверный\",\n              uz: \"Telefon raqam noto'g'ri\"\n            })\n          });\n        }\n      };\n\n      var sendCode = function sendCode() {\n        _this3.setState({\n          codeTime: 60,\n          isLoading: true\n        });\n\n        if (intervalId !== '') clearInterval(intervalId);\n        firebaseAuth.signInWithPhoneNumber(phoneNumber, reCaptcha).then(function (result) {\n          var timeCount = 60;\n\n          _this3.setState({\n            phoneNumber: phoneNumber,\n            codeTime: timeCount,\n            isVerifyProcess: true,\n            confirmationResult: result,\n            isLoading: false\n          });\n\n          var intervalId = setInterval(function () {\n            timeCount--;\n\n            _this3.setState({\n              codeTime: timeCount >= 0 ? timeCount : 0\n            });\n          }, 1000);\n\n          _this3.setState({\n            intervalId: intervalId\n          });\n        }).catch(function (error) {\n          _this3.setState({\n            isLoading: false\n          });\n        }).finally(function () {\n          _this3.setState({\n            isLoading: false\n          });\n        });\n      };\n\n      var checkVerificationCode = function checkVerificationCode(e) {\n        e.preventDefault();\n        confirmationResult.confirm(code).then(function (res) {\n          _this3.sign({\n            password: password,\n            firstName: firstName,\n            lastName: lastName,\n            hasRegistered: hasRegistered,\n            phoneNumber: phoneNumber,\n            hasPassword: hasPassword,\n            prePassword: prePassword\n          });\n        }).catch(function (error) {\n          notification.warning({\n            key: 'incorrect',\n            message: intlMessages({\n              en: \"Phone number!\",\n              ru: \"Номер телефона!\",\n              uz: \"Telefon raqam!\"\n            }),\n            description: intlMessages({\n              en: \"The confirmation code is incorrect\",\n              ru: \"Неверный код подтверждения\",\n              uz: \"Tasdiqlash kodi noto'g'ri\"\n            })\n          });\n\n          _this3.setState({\n            isLoading: false\n          });\n        });\n      };\n\n      var cancelPhoneNubber = function cancelPhoneNubber() {\n        _this3.setState({\n          phoneNumber: '',\n          isVerifyProcess: false,\n          checkPhoneProcess: true\n        });\n      };\n\n      if (!hasPassword) {\n        notification.error({\n          key: 'phoneNumber',\n          message: intlMessages({\n            en: \"Phone number!\",\n            ru: \"Номер телефона!\",\n            uz: \"Telefon raqam!\"\n          }),\n          description: intlMessages({\n            en: \"Phone number not found this system\",\n            ru: \"Номер телефона не найден этой системой\",\n            uz: \"Tizimda bunday raqam topilmadi\"\n          })\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-app-login-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-app-login-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-app-login-main-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-app-login-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-5 row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/home',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(\"assets/images/ark-client/logo-black.png\"),\n        alt: \"Logo\",\n        height: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"font-weight-light title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }\n      }, \"\\\"\", /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"page.login.app.title.one_top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 22\n        }\n      }), \"\\\"\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 72\n        }\n      }), /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"page.login.app.title.one_bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }\n      })), !isVerifyProcess ? /*#__PURE__*/React.createElement(Form, {\n        onSubmit: login,\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mb-5 sub-welcome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"welcome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"icon-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"img-icon-phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 20,\n        className: \"effect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(MaskedInput, {\n        mask: \"+998111111111\",\n        placeholder: intlMessages({\n          en: \"Enter your phone number\",\n          ru: \"Введите номер телефона\",\n          uz: \"Telefon raqamingizni kiriting\"\n        }),\n        className: \"form-control\",\n        id: \"login\",\n        name: \"phoneNumber\",\n        onChange: updatePhone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }\n      })))), !checkPhoneProcess && hasRegistered && hasPassword ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-block mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"icon-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"img-icon-key\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Input.Password, {\n        placeholder: intlMessages({\n          en: \"Enter your password\",\n          ru: \"Введите пароль\",\n          uz: \"Parolni kiriting\"\n        }),\n        name: \"password\",\n        id: \"password\",\n        onChange: updateState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 31\n        }\n      }))), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: \"0 auto\",\n          width: \"35px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 31\n        }\n      })) : /*#__PURE__*/React.createElement(Button, {\n        type: \"default\",\n        htmlType: \"submit\",\n        className: \"btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"enter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 59\n        }\n      }))) : '') : /*#__PURE__*/React.createElement(Form, {\n        onSubmit: checkVerificationCode,\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"confirm_code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 44\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"icon-block text-center pt-2\",\n        style: {\n          fontSize: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          margion: \"8px\"\n        },\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 31\n        }\n      }, codeTime))), /*#__PURE__*/React.createElement(Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"code\",\n        placeholder: \"------\",\n        name: \"code\",\n        onChange: updateState,\n        className: \"form-control\",\n        value: code,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"text-center font-change mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"send.sms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"text-center font-change\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 23\n        }\n      }, \"+998 ** *** **\", phoneNumber.substring(11)), codeTime === 0 ? /*#__PURE__*/React.createElement(Button, {\n        onClick: sendCode,\n        className: \"m-auto d-block bg-transparent border-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"resend.code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 27\n        }\n      })) : '', isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: \"0 auto\",\n          width: \"35px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 27\n        }\n      })) : /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-4 back-next\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        htmlType: \"button\",\n        type: \"default\",\n        onClick: cancelPhoneNubber,\n        className: \"pl-xl-5 pr-xl-5 pl-md-2 pr-md-2 pl-sm-1 pr-sm-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"cancel_code_btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"float-right pl-xl-5 pr-xl-5 pl-md-2 pr-md-2 pl-sm-1 pr-sm-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IntlMessages, {\n        id: \"confirm_code_btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 31\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"reCaptcha\",\n        render: \"explicit\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-app-logo-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-app-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"example\",\n        src: loginBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"reCaptcha\",\n        render: \"explicit\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  var authUser = auth.authUser;\n  return {\n    authUser: authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onAuthUser: onAuthUser\n})(Login);","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/routes/login/index.js"],"names":["React","Link","Redirect","connect","firebase","parsePhoneNumber","MaskedInput","TOKEN_NAME","Button","Col","Form","Input","Row","notification","ApiRequest","api","loginBack","firebaseAuth","IntlMessages","intlMessages","onAuthUser","userCheckPhone","checkUser","setPassword","signIn","userMe","Login","props","recaptchaVerifier","checkPhone","payload","phoneNumber","then","result","success","setState","checkPhoneProcess","hasRegistered","hasPassword","isAdmin","isLoading","checkState","isValid","e","state","password","sign","setPasswordBody","prePassword","res","signInOrSignUp","reqBody","data","verificationCode","body","accessToken","undefined","localStorage","setItem","tokenType","object","forceUpdate","removeItem","finally","reCaptcha","intervalId","confirmationResult","isVerifyProcess","code","lastName","confirmPassword","cont","document","getElementById","auth","RecaptchaVerifier","isNotify","toasterProps","message","warning","key","en","ru","uz","render","firstName","codeTime","updatePhone","target","name","value","updateState","login","preventDefault","description","sendCode","clearInterval","signInWithPhoneNumber","timeCount","setInterval","catch","error","checkVerificationCode","confirm","cancelPhoneNubber","require","margin","width","fontSize","margion","substring","display","Component","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport firebase from 'firebase/app';\r\nimport {parsePhoneNumber} from 'libphonenumber-js'\r\nimport {MaskedInput} from \"antd-mask-input\";\r\nimport {TOKEN_NAME} from \"util/constants\"\r\nimport {Button, Col, Form, Input, Row, notification} from \"antd\";\r\nimport ApiRequest from '../../services/index';\r\nimport api from '../../services/app';\r\nimport loginBack from '../../assets/images/ark-client/login-back.jpg'\r\nimport {firebaseAuth} from '../../firebase/firebase';\r\nimport IntlMessages, {intlMessages} from \"../../util/IntlMessages\";\r\nimport {onAuthUser} from \"../../redux/auth/action\"\r\n\r\nconst {userCheckPhone, checkUser, setPassword, signIn, userMe} = api;\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      phoneNumber: '',\r\n      password: '',\r\n      checkPhoneProcess: true,\r\n      hasRegistered: false,\r\n      reCaptcha: null,\r\n      intervalId: '',\r\n      confirmationResult: null,\r\n      isVerifyProcess: false,\r\n      code: '',\r\n      lastName: '',\r\n      confirmPassword: '',\r\n      hasPassword: true,\r\n      prePassword: '',\r\n      isLoading: false,\r\n      isAdmin: false,\r\n    }\r\n  }\r\n\r\n\r\n  recaptchaVerifier = null;\r\n\r\n  componentDidMount() {\r\n    let cont = document.getElementById('reCaptcha');\r\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(cont, {\r\n      'size': 'invisible',\r\n      'callback': (res) => {\r\n      },\r\n      'expired-callback': () => {\r\n      },\r\n      'error-callback': () => {\r\n        this.setState({\r\n          isNotify: true,\r\n          isLoading: false,\r\n          toasterProps: {\r\n            message: 'Xatolik yuz berdi qaytadan urunib ko\\'ring'\r\n          }\r\n        });\r\n        notification.warning({\r\n          key: 'warning',\r\n          message: intlMessages({\r\n            en: \"An error occurred. Please try again\",\r\n            ru: \"Произошла ошибка. Пожалуйста, попробуйте еще раз\",\r\n            uz: \"Xatolik yuz berdi qaytadan urunib ko'ring\"\r\n          }),\r\n        });\r\n      }\r\n    });\r\n    this.recaptchaVerifier.render();\r\n    this.setState({\r\n      reCaptcha: this.recaptchaVerifier\r\n    })\r\n\r\n  }\r\n\r\n  checkPhone = (payload) => {\r\n    ApiRequest(userCheckPhone, {phoneNumber: payload}).then(result => {\r\n      if (result.success) {\r\n        this.setState({\r\n          checkPhoneProcess: false,\r\n          hasRegistered: result.hasRegistered,\r\n          hasPassword: result.hasPassword,\r\n          isAdmin: result.isAdmin,\r\n          isLoading: false\r\n        });\r\n      } else {\r\n        return <Redirect to={'/login'}/>\r\n      }\r\n    });\r\n\r\n  };\r\n  checkState = (phoneNumber) => {\r\n    try {\r\n      if (parsePhoneNumber(phoneNumber).isValid()) {\r\n        this.setState({isLoading: true});\r\n        this.checkPhone(phoneNumber);\r\n      } else {\r\n        this.setState({checkPhoneProcess: true, hasRegistered: false})\r\n      }\r\n    } catch (e) {\r\n      this.setState({checkPhoneProcess: true, hasRegistered: false})\r\n    }\r\n  };\r\n  checkUser = () => {\r\n    let {password, phoneNumber} = this.state;\r\n    return ApiRequest(checkUser, {password, phoneNumber})\r\n  };\r\n  sign = (payload) => {\r\n    this.setState({isLoading: true});\r\n    if (!payload.hasPassword) {\r\n      let setPasswordBody = {\r\n        phoneNumber: payload.phoneNumber,\r\n        password: payload.password,\r\n        prePassword: payload.prePassword\r\n      };\r\n      ApiRequest(setPassword, setPasswordBody).then(res => {\r\n        if (res.success) {\r\n          this.setState({hasPassword: true})\r\n        }\r\n      });\r\n      this.signInOrSignUp(payload)\r\n    } else {\r\n      this.signInOrSignUp(payload)\r\n    }\r\n  };\r\n  signInOrSignUp = (payload) => {\r\n    let reqBody = {};\r\n    if (payload.hasRegistered) {\r\n      reqBody = {phoneNumber: payload.phoneNumber, password: payload.password}\r\n    } else {\r\n      reqBody = payload\r\n    }\r\n    ApiRequest(signIn, reqBody).then((data) => {\r\n      this.setState({verificationCode: ''});\r\n      if (data.body && data.body.accessToken !== undefined) {\r\n        localStorage.setItem(TOKEN_NAME, data.body.tokenType + \" \" + data.body.accessToken);\r\n        ApiRequest(userMe).then((result) => {\r\n          if (result.success) {\r\n            this.props.onAuthUser(result.object);\r\n            this.forceUpdate();\r\n          } else {\r\n            localStorage.removeItem(TOKEN_NAME);\r\n            this.props.onAuthUser(null);\r\n          }\r\n        })\r\n      }\r\n    }).finally(() => {\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // const {authUser} = this.props;\r\n    // if (authUser){\r\n    //   return <Redirect to={'/main/dashboard'}/>\r\n    // }\r\n    const {\r\n      checkPhoneProcess, hasRegistered, phoneNumber, password, isLoading,\r\n      reCaptcha, intervalId, isVerifyProcess, confirmationResult,\r\n      code, firstName, lastName, codeTime, hasPassword, prePassword, isAdmin,\r\n    } = this.state;\r\n\r\n\r\n    const updatePhone = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        isLoading: false\r\n      });\r\n      this.checkState(e.target.value)\r\n    };\r\n    const updateState = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        isLoading: false\r\n      });\r\n    };\r\n\r\n    const login = (e) => {\r\n      e.preventDefault();\r\n      if (hasRegistered && hasPassword && isAdmin) {\r\n        this.checkUser().then(res => {\r\n          if (res.success) {\r\n            // sendCode();\r\n\r\n            this.signInOrSignUp({\r\n              password,\r\n              phoneNumber\r\n            })\r\n          } else {\r\n            notification.warning({\r\n              key: 'phoneNumber',\r\n              message: \"Password\",\r\n              description: \"Password warning\",\r\n            });\r\n          }\r\n        })\r\n      } else if (hasRegistered && hasPassword && !isAdmin) {\r\n        this.checkUser().then(res => {\r\n          if (res.success) {\r\n            this.signInOrSignUp({\r\n              password,\r\n              phoneNumber\r\n            })\r\n            // this.sign({\r\n            //     phoneNumber,\r\n            //     password,\r\n            //     hasRegistered,\r\n            //     hasPassword,\r\n            // })\r\n          } else {\r\n            notification.warning({\r\n              key: 'phoneNumber',\r\n              message: intlMessages({en: \"Password\", ru: \"Пароль\", uz: \"Parol\"}),\r\n              description: intlMessages({\r\n                en: \"The password is incorrect\",\r\n                ru: \"Пароль неправильный\",\r\n                uz: \"Parol noto'g'ri\"\r\n              }),\r\n            });\r\n          }\r\n        })\r\n      } else {\r\n        notification.warning({\r\n          key: 'phoneNumber',\r\n          message: intlMessages({en: \"Phone number!\", ru: \"Номер телефона!\", uz: \"Telefon raqam!\"}),\r\n          description: intlMessages({\r\n            en: \"The phone number is incorrect\",\r\n            ru: \"Номер телефона неверный\",\r\n            uz: \"Telefon raqam noto'g'ri\"\r\n          }),\r\n        });\r\n      }\r\n    };\r\n    const sendCode = () => {\r\n      this.setState({\r\n        codeTime: 60,\r\n        isLoading: true\r\n      });\r\n      if (intervalId !== '')\r\n        clearInterval(intervalId);\r\n      firebaseAuth.signInWithPhoneNumber(phoneNumber, reCaptcha)\r\n        .then((result) => {\r\n          let timeCount = 60;\r\n          this.setState({\r\n            phoneNumber,\r\n            codeTime: timeCount,\r\n            isVerifyProcess: true,\r\n            confirmationResult: result,\r\n            isLoading: false\r\n          });\r\n          let intervalId = setInterval(() => {\r\n            timeCount--;\r\n            this.setState({codeTime: timeCount >= 0 ? timeCount : 0})\r\n          }, 1000);\r\n          this.setState({\r\n            intervalId\r\n          })\r\n\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          })\r\n        })\r\n        .finally(() => {\r\n          this.setState({\r\n            isLoading: false\r\n          })\r\n        });\r\n    };\r\n    const checkVerificationCode = (e) => {\r\n      e.preventDefault();\r\n      confirmationResult.confirm(code)\r\n        .then((res) => {\r\n          this.sign({\r\n            password,\r\n            firstName,\r\n            lastName,\r\n            hasRegistered,\r\n            phoneNumber: phoneNumber,\r\n            hasPassword,\r\n            prePassword\r\n          });\r\n\r\n        }).catch((error) => {\r\n        notification.warning({\r\n          key: 'incorrect',\r\n          message: intlMessages({en: \"Phone number!\", ru: \"Номер телефона!\", uz: \"Telefon raqam!\"}),\r\n          description: intlMessages({\r\n            en: \"The confirmation code is incorrect\",\r\n            ru: \"Неверный код подтверждения\",\r\n            uz: \"Tasdiqlash kodi noto'g'ri\"\r\n          }),\r\n        });\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n    };\r\n\r\n    const cancelPhoneNubber = () => {\r\n      this.setState({\r\n        phoneNumber: '',\r\n        isVerifyProcess: false,\r\n        checkPhoneProcess: true\r\n      })\r\n    };\r\n\r\n    if (!hasPassword) {\r\n      notification.error({\r\n        key: 'phoneNumber',\r\n        message: intlMessages({en: \"Phone number!\", ru: \"Номер телефона!\", uz: \"Telefon raqam!\"}),\r\n        description: intlMessages({\r\n          en: \"Phone number not found this system\",\r\n          ru: \"Номер телефона не найден этой системой\",\r\n          uz: \"Tizimda bunday raqam topilmadi\"\r\n        }),\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"gx-app-login-wrap\">\r\n        <div className=\"gx-app-login-container\">\r\n          <div className=\"gx-app-login-main-content\">\r\n            <div className=\"gx-app-login-content\">\r\n              <div className=\"p-5 row\">\r\n                <div className=\"col-md-12\">\r\n                  <Link to={'/home'}>\r\n                    <img src={require(\"assets/images/ark-client/logo-black.png\")} alt=\"Logo\" height={100}/>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <h4 className=\"font-weight-light title\">\r\n                    \"<IntlMessages id=\"page.login.app.title.one_top\"/>\"<br/>\r\n                    <IntlMessages id=\"page.login.app.title.one_bottom\"/>\r\n                  </h4>\r\n                  {!isVerifyProcess ?\r\n                    <Form onSubmit={login} className=\"mt-5\">\r\n                      <div className=\"form-block\">\r\n                        <h6 className=\"mb-5 sub-welcome\">\r\n                          <IntlMessages id=\"welcome\"/>\r\n                        </h6>\r\n                        <Row>\r\n                          <Col span={4}>\r\n                            <div className=\"icon-block\">\r\n                              <span className=\"img-icon-phone\"/>\r\n                            </div>\r\n                          </Col>\r\n                          <Col span={20} className=\"effect\">\r\n                            <MaskedInput\r\n                              mask=\"+998111111111\"\r\n                              placeholder={intlMessages({\r\n                                en: \"Enter your phone number\",\r\n                                ru: \"Введите номер телефона\",\r\n                                uz: \"Telefon raqamingizni kiriting\"\r\n                              })}\r\n                              className=\"form-control\"\r\n                              id=\"login\"\r\n                              name=\"phoneNumber\"\r\n                              onChange={updatePhone}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n\r\n                      {!checkPhoneProcess && hasRegistered && hasPassword ?\r\n\r\n                        <div className=\"form-block mb-0\">\r\n                          <Row>\r\n                            <Col span={4}>\r\n                              <div className=\"icon-block\">\r\n                                <span className=\"img-icon-key\"/>\r\n                              </div>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                              <Input.Password\r\n                                placeholder={intlMessages({\r\n                                  en: \"Enter your password\",\r\n                                  ru: \"Введите пароль\",\r\n                                  uz: \"Parolni kiriting\"\r\n                                })}\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                onChange={updateState}\r\n\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          {isLoading ?\r\n                            <div style={{margin: \"0 auto\", width: \"35px\"}}>\r\n                              <div className=\"my-loader\"/>\r\n                            </div> :\r\n                            <Button type=\"default\" htmlType=\"submit\"\r\n                                    className=\"btn-block\"><IntlMessages\r\n                              id=\"enter\"/></Button>\r\n                          }\r\n                        </div>\r\n                        : ''}\r\n                    </Form>\r\n                    :\r\n                    <Form onSubmit={checkVerificationCode} className=\"mt-5\">\r\n                      <h5 className=\"mb-4\"><IntlMessages id=\"confirm_code\"/></h5>\r\n                      <div className=\"form-block\">\r\n                        <Row>\r\n                          <Col span={4}>\r\n                            <div className=\"icon-block text-center pt-2\"\r\n                                 style={{fontSize: \"25px\"}}>\r\n                              <p style={{margion: \"8px\"}} className=\"mb-0\">\r\n                                {codeTime}\r\n                              </p>\r\n                            </div>\r\n                          </Col>\r\n                          <Col span={20}>\r\n                            <Input id=\"code\"\r\n                                   placeholder=\"------\"\r\n                                   name=\"code\"\r\n                                   onChange={updateState}\r\n                                   className=\"form-control\" value={code} required\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                      <h6 className=\"text-center font-change mb-0\">\r\n                        <IntlMessages id=\"send.sms\"/>\r\n                      </h6>\r\n                      <h5 className=\"text-center font-change\">+998 ** ***\r\n                        **{phoneNumber.substring(11)}</h5>\r\n                      {codeTime === 0 ?\r\n                        <Button onClick={sendCode}\r\n                                className=\"m-auto d-block bg-transparent border-0\">\r\n                          <IntlMessages id=\"resend.code\"/>\r\n                        </Button> : ''}\r\n\r\n                      {isLoading ?\r\n                        <div style={{margin: \"0 auto\", width: \"35px\"}}>\r\n                          <div className=\"my-loader\"/>\r\n                        </div> :\r\n                        <Row className=\"mt-4 back-next\">\r\n                          <Col span={12}>\r\n                            <Button htmlType=\"button\" type=\"default\"\r\n                                    onClick={cancelPhoneNubber}\r\n                                    className=\"pl-xl-5 pr-xl-5 pl-md-2 pr-md-2 pl-sm-1 pr-sm-1\">\r\n                              <IntlMessages id=\"cancel_code_btn\"/>\r\n                            </Button>\r\n\r\n                          </Col>\r\n                          <Col span={12}>\r\n                            <Button type=\"primary\" htmlType=\"submit\"\r\n                                    className=\"float-right pl-xl-5 pr-xl-5 pl-md-2 pr-md-2 pl-sm-1 pr-sm-1\">\r\n                              <IntlMessages id=\"confirm_code_btn\"/></Button>\r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                    </Form>}\r\n                </div>\r\n                <div id=\"reCaptcha\" render=\"explicit\" style={{display: 'none'}}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"gx-app-logo-content\">\r\n              <div className=\"gx-app-logo\">\r\n                <img alt=\"example\" src={loginBack}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"reCaptcha\" render=\"explicit\" style={{display: 'none'}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ auth}) => {\r\n  const {authUser} = auth;\r\n  return { authUser}\r\n};\r\nexport default connect(mapStateToProps, {onAuthUser})(Login);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}