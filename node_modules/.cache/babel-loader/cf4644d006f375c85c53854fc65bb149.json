{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\src\\\\containers\\\\Sidebar\\\\SidebarContent.js\";\nimport React, { Component } from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CustomScrollbars from \"util/CustomScrollbars\";\nimport { arrayToTree } from \"util/CustomFunc\";\nimport SidebarLogo from \"./SidebarLogo\";\nimport Auxiliary from \"util/Auxiliary\";\nimport UserProfile from \"./UserProfile\";\nimport AppsNavigation from \"./AppsNavigation\";\nimport { NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, THEME_TYPE_LITE } from \"../../constants/ThemeSetting\";\nimport { connect } from \"react-redux\";\nimport menus from './../../networking/index';\nvar SubMenu = Menu.SubMenu;\nvar MenuItemGroup = Menu.ItemGroup;\n\nvar SidebarContent = /*#__PURE__*/function (_Component) {\n  _inherits(SidebarContent, _Component);\n\n  var _super = _createSuper(SidebarContent);\n\n  function SidebarContent() {\n    _classCallCheck(this, SidebarContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SidebarContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          themeType = _this$props.themeType,\n          navStyle = _this$props.navStyle,\n          pathname = _this$props.pathname,\n          locale = _this$props.locale;\n\n      var getNoHeaderClass = function getNoHeaderClass(navStyle) {\n        if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n          return \"gx-no-header-notifications\";\n        }\n\n        return \"\";\n      };\n\n      var getNavStyleSubMenuClass = function getNavStyleSubMenuClass(navStyle) {\n        if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n          return \"gx-no-header-submenu-popup\";\n        }\n\n        return \"\";\n      };\n\n      var menuTree = arrayToTree(menus, 'id', 'parentId', 'children');\n\n      var getMenus = function getMenus(menus) {\n        if (menus && menus.length !== 0) {\n          return menus.map(function (item, index) {\n            if (item.type === 'group') {\n              return /*#__PURE__*/React.createElement(MenuItemGroup, {\n                key: item.id,\n                className: \"gx-menu-group\",\n                title: item[locale.languageId],\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 20\n                }\n              }, item.children && item.children.length !== 0 ? getMenus(item.children) : null);\n            }\n\n            if (item.type === 'collapse') {\n              return /*#__PURE__*/React.createElement(SubMenu, {\n                key: item.id,\n                className: getNavStyleSubMenuClass(navStyle),\n                title: /*#__PURE__*/React.createElement(\"span\", {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 36\n                  }\n                }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n                  className: \"icon mt-2 icon-\" + item.icon,\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 43\n                  }\n                }), /*#__PURE__*/React.createElement(\"span\", {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }\n                }, item[locale.languageId])),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 20\n                }\n              }, item.children && item.children.length !== 0 ? getMenus(item.children) : null);\n            }\n\n            if (item.type === 'item') {\n              return /*#__PURE__*/React.createElement(Menu.Item, {\n                key: item.id,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 20\n                }\n              }, /*#__PURE__*/React.createElement(Link, {\n                to: item.route,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"i\", {\n                className: \"icon icon-\" + item.icon,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 17\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }\n              }, item[locale.languageId])));\n            }\n\n            return item;\n          });\n        }\n      };\n\n      var menuItems = getMenus(menuTree);\n      var selectedKeys = pathname.substr(1);\n      var defaultOpenKeys = selectedKeys.split('/')[1];\n      return /*#__PURE__*/React.createElement(Auxiliary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SidebarLogo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-sidebar-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gx-sidebar-notifications \".concat(getNoHeaderClass(navStyle)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(UserProfile, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(AppsNavigation, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(CustomScrollbars, {\n        className: \"gx-layout-sider-scrollbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        defaultOpenKeys: [defaultOpenKeys],\n        selectedKeys: [selectedKeys],\n        theme: themeType === THEME_TYPE_LITE ? 'lite' : 'dark',\n        mode: \"inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, menuItems))));\n    }\n  }]);\n\n  return SidebarContent;\n}(Component);\n\nSidebarContent.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var navStyle = settings.navStyle,\n      themeType = settings.themeType,\n      locale = settings.locale,\n      pathname = settings.pathname;\n  return {\n    navStyle: navStyle,\n    themeType: themeType,\n    locale: locale,\n    pathname: pathname\n  };\n};\n\nexport default connect(mapStateToProps)(SidebarContent);","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/containers/Sidebar/SidebarContent.js"],"names":["React","Component","Menu","Link","CustomScrollbars","arrayToTree","SidebarLogo","Auxiliary","UserProfile","AppsNavigation","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","THEME_TYPE_LITE","connect","menus","SubMenu","MenuItemGroup","ItemGroup","SidebarContent","props","themeType","navStyle","pathname","locale","getNoHeaderClass","getNavStyleSubMenuClass","menuTree","getMenus","length","map","item","index","type","id","languageId","children","icon","route","menuItems","selectedKeys","substr","defaultOpenKeys","split","propTypes","mapStateToProps","settings"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,oCADF,EAEEC,gCAFF,EAGEC,eAHF,QAIO,8BAJP;AAKA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,IAAMC,OAAO,GAAGb,IAAI,CAACa,OAArB;AACA,IAAMC,aAAa,GAAGd,IAAI,CAACe,SAA3B;;IAGMC,c;;;;;;;;;;;;;WACJ,kBAAS;AAAA;;AACP,wBAA+C,KAAKC,KAApD;AAAA,UAAOC,SAAP,eAAOA,SAAP;AAAA,UAAkBC,QAAlB,eAAkBA,QAAlB;AAAA,UAA4BC,QAA5B,eAA4BA,QAA5B;AAAA,UAAqCC,MAArC,eAAqCA,MAArC;;AACA,UAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,QAAD,EAAc;AACrC,YAAIA,QAAQ,KAAKV,gCAAb,IAAiDU,QAAQ,KAAKX,oCAAlE,EAAwG;AACtG,iBAAO,4BAAP;AACD;;AACD,eAAO,EAAP;AACD,OALD;;AAMA,UAAMe,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACJ,QAAD,EAAc;AAC5C,YAAIA,QAAQ,KAAKV,gCAAjB,EAAmD;AACjD,iBAAO,4BAAP;AACD;;AACD,eAAO,EAAP;AACD,OALD;;AAMA,UAAMe,QAAQ,GAAGrB,WAAW,CAACS,KAAD,EAAQ,IAAR,EAAc,UAAd,EAA0B,UAA1B,CAA5B;;AACA,UAAMa,QAAQ,GAAG,SAAXA,QAAW,CAACb,KAAD,EAAS;AAExB,YAAIA,KAAK,IAAIA,KAAK,CAACc,MAAN,KAAe,CAA5B,EAA8B;AAC5B,iBAAQd,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAe;AAC/B,gBAAID,IAAI,CAACE,IAAL,KAAc,OAAlB,EAA2B;AACzB,kCAAO,oBAAC,aAAD;AAAe,gBAAA,GAAG,EAAEF,IAAI,CAACG,EAAzB;AAA6B,gBAAA,SAAS,EAAC,eAAvC;AAAuD,gBAAA,KAAK,EAAEH,IAAI,CAACP,MAAM,CAACW,UAAR,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJJ,IAAI,CAACK,QAAL,IAAiBL,IAAI,CAACK,QAAL,CAAcP,MAAd,KAAyB,CAA1C,GAA8CD,QAAQ,CAACG,IAAI,CAACK,QAAN,CAAtD,GAAwE,IADpE,CAAP;AAGD;;AACD,gBAAIL,IAAI,CAACE,IAAL,KAAc,UAAlB,EAA8B;AAC5B,kCAAO,oBAAC,OAAD;AAAS,gBAAA,GAAG,EAAEF,IAAI,CAACG,EAAnB;AAAuB,gBAAA,SAAS,EAAER,uBAAuB,CAACJ,QAAD,CAAzD;AACS,gBAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAO;AAAG,kBAAA,SAAS,EAAE,oBAAkBS,IAAI,CAACM,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,eACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAON,IAAI,CAACP,MAAM,CAACW,UAAR,CAAX,CADe,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGJJ,IAAI,CAACK,QAAL,IAAiBL,IAAI,CAACK,QAAL,CAAcP,MAAd,KAAyB,CAA1C,GAA8CD,QAAQ,CAACG,IAAI,CAACK,QAAN,CAAtD,GAAwE,IAHpE,CAAP;AAKD;;AACD,gBAAIL,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACxB,kCAAO,oBAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,GAAG,EAAEF,IAAI,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACL,oBAAC,IAAD;AAAM,gBAAA,EAAE,EAAEH,IAAI,CAACO,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAG,gBAAA,SAAS,EAAE,eAAaP,IAAI,CAACM,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAON,IAAI,CAACP,MAAM,CAACW,UAAR,CAAX,CAFF,CADK,CAAP;AAMD;;AACD,mBAAOJ,IAAP;AACD,WAtBO,CAAR;AAuBD;AACF,OA3BD;;AA4BA,UAAMQ,SAAS,GAAEX,QAAQ,CAACD,QAAD,CAAzB;AACA,UAAMa,YAAY,GAAGjB,QAAQ,CAACkB,MAAT,CAAgB,CAAhB,CAArB;AACA,UAAMC,eAAe,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAxB;AACA,0BACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,qCAA8BlB,gBAAgB,CAACH,QAAD,CAA9C,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,2BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,eAAe,EAAE,CAACoB,eAAD,CADnB;AAEE,QAAA,YAAY,EAAE,CAACF,YAAD,CAFhB;AAGE,QAAA,KAAK,EAAEnB,SAAS,KAAKR,eAAd,GAAgC,MAAhC,GAAyC,MAHlD;AAIE,QAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKO0B,SALP,CADF,CALF,CAFF,CADF;AAoBD;;;;EAnE0BrC,S;;AAsE7BiB,cAAc,CAACyB,SAAf,GAA2B,EAA3B;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACtC,MAAOxB,QAAP,GAAgDwB,QAAhD,CAAOxB,QAAP;AAAA,MAAiBD,SAAjB,GAAgDyB,QAAhD,CAAiBzB,SAAjB;AAAA,MAA4BG,MAA5B,GAAgDsB,QAAhD,CAA4BtB,MAA5B;AAAA,MAAoCD,QAApC,GAAgDuB,QAAhD,CAAoCvB,QAApC;AACA,SAAO;AAACD,IAAAA,QAAQ,EAARA,QAAD;AAAWD,IAAAA,SAAS,EAATA,SAAX;AAAsBG,IAAAA,MAAM,EAANA,MAAtB;AAA8BD,IAAAA,QAAQ,EAARA;AAA9B,GAAP;AACD,CAHD;;AAIA,eAAeT,OAAO,CAAC+B,eAAD,CAAP,CAAyB1B,cAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport {arrayToTree} from \"util/CustomFunc\";\r\nimport SidebarLogo from \"./SidebarLogo\";\r\n\r\nimport Auxiliary from \"util/Auxiliary\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport AppsNavigation from \"./AppsNavigation\";\r\nimport {\r\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  THEME_TYPE_LITE\r\n} from \"../../constants/ThemeSetting\";\r\nimport {connect} from \"react-redux\";\r\nimport menus from './../../networking/index'\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\n\r\nclass SidebarContent extends Component {\r\n  render() {\r\n    const {themeType, navStyle, pathname,locale} = this.props;\r\n    const getNoHeaderClass = (navStyle) => {\r\n      if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\r\n        return \"gx-no-header-notifications\";\r\n      }\r\n      return \"\";\r\n    };\r\n    const getNavStyleSubMenuClass = (navStyle) => {\r\n      if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\r\n        return \"gx-no-header-submenu-popup\";\r\n      }\r\n      return \"\";\r\n    };\r\n    const menuTree = arrayToTree(menus, 'id', 'parentId', 'children');\r\n    const getMenus = (menus)=>{\r\n\r\n      if (menus && menus.length!==0){\r\n        return  menus.map((item,index)=> {\r\n          if (item.type === 'group') {\r\n            return <MenuItemGroup key={item.id} className=\"gx-menu-group\" title={item[locale.languageId]}>\r\n              {item.children && item.children.length !== 0 ? getMenus(item.children) : null}\r\n            </MenuItemGroup>;\r\n          }\r\n          if (item.type === 'collapse') {\r\n            return <SubMenu key={item.id} className={getNavStyleSubMenuClass(navStyle)}\r\n                            title={<span> <i className={\"icon mt-2 icon-\"+item.icon}/>\r\n                    <span>{item[locale.languageId]}</span></span>}>\r\n              {item.children && item.children.length !== 0 ? getMenus(item.children) : null}\r\n            </SubMenu>\r\n          }\r\n          if (item.type === 'item') {\r\n            return <Menu.Item key={item.id}>\r\n              <Link to={item.route}>\r\n                <i className={\"icon icon-\"+item.icon}/>\r\n                <span>{item[locale.languageId]}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          }\r\n          return item;\r\n        });\r\n      }\r\n    };\r\n    const menuItems =getMenus(menuTree);\r\n    const selectedKeys = pathname.substr(1);\r\n    const defaultOpenKeys = selectedKeys.split('/')[1];\r\n    return (\r\n      <Auxiliary>\r\n        <SidebarLogo/>\r\n        <div className=\"gx-sidebar-content\">\r\n          <div className={`gx-sidebar-notifications ${getNoHeaderClass(navStyle)}`}>\r\n            <UserProfile/>\r\n            <AppsNavigation/>\r\n          </div>\r\n          <CustomScrollbars className=\"gx-layout-sider-scrollbar\">\r\n            <Menu\r\n              defaultOpenKeys={[defaultOpenKeys]}\r\n              selectedKeys={[selectedKeys]}\r\n              theme={themeType === THEME_TYPE_LITE ? 'lite' : 'dark'}\r\n              mode=\"inline\">\r\n                  {menuItems}\r\n            </Menu>\r\n          </CustomScrollbars>\r\n        </div>\r\n      </Auxiliary>\r\n    );\r\n  }\r\n}\r\n\r\nSidebarContent.propTypes = {};\r\nconst mapStateToProps = ({settings}) => {\r\n  const {navStyle, themeType, locale, pathname} = settings;\r\n  return {navStyle, themeType, locale, pathname}\r\n};\r\nexport default connect(mapStateToProps)(SidebarContent);\r\n\r\n"]},"metadata":{},"sourceType":"module"}