{"ast":null,"code":"import React from\"react\";import{FormattedMessage,injectIntl}from\"react-intl\";import{validatingJSON}from'../util/CustomFunc';import config from\"../util/config\";var locales=config.locales;var IntlMassage=function IntlMassage(props){return/*#__PURE__*/React.createElement(FormattedMessage,props);};export default injectIntl(IntlMassage,{withRef:false});export function intlMessages(data){var locale=validatingJSON(localStorage.getItem('locale'));if(!locale){locale=locales[0];}var relevantLanguageData='';if(Object.keys(data).length!==0){for(var i in data){if(locale.locale===i){return data[i];}}}return relevantLanguageData;}","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/util/IntlMessages.js"],"names":["React","FormattedMessage","injectIntl","validatingJSON","config","locales","IntlMassage","props","withRef","intlMessages","data","locale","localStorage","getItem","relevantLanguageData","Object","keys","length","i"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,gBAAR,CAA0BC,UAA1B,KAA4C,YAA5C,CACA,OAAQC,cAAR,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,GAAOC,CAAAA,OAAP,CAAgBD,MAAhB,CAAOC,OAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,qBAAI,oBAAC,gBAAD,CAAsBA,KAAtB,CAAJ,EAAzB,CACA,cAAeL,CAAAA,UAAU,CAACI,WAAD,CAAc,CACrCE,OAAO,CAAE,KAD4B,CAAd,CAAzB,CAKA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,IAAtB,CAA4B,CACjC,GAAIC,CAAAA,MAAM,CAAGR,cAAc,CAACS,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAA3B,CACA,GAAI,CAACF,MAAL,CAAY,CACVA,MAAM,CAACN,OAAO,CAAC,CAAD,CAAd,CACD,CACD,GAAIS,CAAAA,oBAAoB,CAAG,EAA3B,CACA,GAAIC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,GAA6B,CAAjC,CAAoC,CAClC,IAAK,GAAIC,CAAAA,CAAT,GAAcR,CAAAA,IAAd,CAAoB,CAClB,GAAIC,MAAM,CAACA,MAAP,GAAkBO,CAAtB,CAAyB,CACvB,MAAOR,CAAAA,IAAI,CAACQ,CAAD,CAAX,CACD,CACF,CACF,CACD,MAAOJ,CAAAA,oBAAP,CAED","sourcesContent":["import React from \"react\";\r\nimport {FormattedMessage, injectIntl,} from \"react-intl\";\r\nimport {validatingJSON} from '../util/CustomFunc'\r\nimport config from \"../util/config\"\r\nconst {locales}=config;\r\n\r\nconst IntlMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMassage, {\r\n  withRef: false\r\n});\r\n\r\n\r\nexport function intlMessages(data) {\r\n  let locale = validatingJSON(localStorage.getItem('locale'));\r\n  if (!locale){\r\n    locale=locales[0]\r\n  }\r\n  let relevantLanguageData = '';\r\n  if (Object.keys(data).length !== 0) {\r\n    for (let i in data) {\r\n      if (locale.locale === i) {\r\n        return data[i]\r\n      }\r\n    }\r\n  }\r\n  return relevantLanguageData;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}