{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ibrohim\\\\Desktop\\\\ark-front\\\\src\\\\util\\\\IntlMessages.js\";\n\nimport React from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { validatingJSON } from '../util/CustomFunc';\nimport config from \"../util/config\";\nvar locales = config.locales;\n\nvar IntlMassage = function IntlMassage(props) {\n  return /*#__PURE__*/React.createElement(FormattedMessage, Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 30\n    }\n  }));\n};\n\nexport default injectIntl(IntlMassage, {\n  withRef: false\n});\nexport function intlMessages(data) {\n  var locale = validatingJSON(localStorage.getItem('locale'));\n\n  if (!locale) {\n    locale = locales[0];\n  }\n\n  var relevantLanguageData = '';\n\n  if (Object.keys(data).length !== 0) {\n    for (var i in data) {\n      if (locale.locale === i) {\n        return data[i];\n      }\n    }\n  }\n\n  return relevantLanguageData;\n}","map":{"version":3,"sources":["C:/Users/Ibrohim/Desktop/ark-front/src/util/IntlMessages.js"],"names":["React","FormattedMessage","injectIntl","validatingJSON","config","locales","IntlMassage","props","withRef","intlMessages","data","locale","localStorage","getItem","relevantLanguageData","Object","keys","length","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,UAA1B,QAA4C,YAA5C;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,IAAOC,OAAP,GAAgBD,MAAhB,CAAOC,OAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,sBAAI,oBAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAzB;;AACA,eAAeL,UAAU,CAACI,WAAD,EAAc;AACrCE,EAAAA,OAAO,EAAE;AAD4B,CAAd,CAAzB;AAKA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,MAAIC,MAAM,GAAGR,cAAc,CAACS,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAA3B;;AACA,MAAI,CAACF,MAAL,EAAY;AACVA,IAAAA,MAAM,GAACN,OAAO,CAAC,CAAD,CAAd;AACD;;AACD,MAAIS,oBAAoB,GAAG,EAA3B;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,SAAK,IAAIC,CAAT,IAAcR,IAAd,EAAoB;AAClB,UAAIC,MAAM,CAACA,MAAP,KAAkBO,CAAtB,EAAyB;AACvB,eAAOR,IAAI,CAACQ,CAAD,CAAX;AACD;AACF;AACF;;AACD,SAAOJ,oBAAP;AAED","sourcesContent":["import React from \"react\";\r\nimport {FormattedMessage, injectIntl,} from \"react-intl\";\r\nimport {validatingJSON} from '../util/CustomFunc'\r\nimport config from \"../util/config\"\r\nconst {locales}=config;\r\n\r\nconst IntlMassage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMassage, {\r\n  withRef: false\r\n});\r\n\r\n\r\nexport function intlMessages(data) {\r\n  let locale = validatingJSON(localStorage.getItem('locale'));\r\n  if (!locale){\r\n    locale=locales[0]\r\n  }\r\n  let relevantLanguageData = '';\r\n  if (Object.keys(data).length !== 0) {\r\n    for (let i in data) {\r\n      if (locale.locale === i) {\r\n        return data[i]\r\n      }\r\n    }\r\n  }\r\n  return relevantLanguageData;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}